
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMENORQUEMENORIGUALMAYORIGUALMAYORleftIGUALQUEDIFERENTEleftANDleftORleftMASMENOSleftPORDIVIDIDOMODULOrightMENOSUNARIONOTAND ARRAY CADENA COMA COMMENTBLOCK CONSOLE CORDER CORIZQ DIFERENTE DIVIDIDO DOSPUNTOS ELSE ENTERO FUNCTION ID IF IGUAL IGUALQUE INTERFACE LET LLAVDER LLAVIZQ LOG MAS MAYOR MAYORIGUAL MENORIGUAL MENORQUE MENOS MENOSUNARIO MODULO NOT NULL NUMBER OR PARDER PARIZQ POR PUNTO PUNTOCOMA STRING TIPOBOOLEAN TIPOCHAR TIPOFLOAT TIPONUMBER TIPOSTRINGinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccion instruccion      : imprimir_instr\n                        | declaracion_instr\n                        | asignacion_instr\n                        | if_instr\n                        | if_else_instr\n                        | funcion_instr\n                        | call_funcion_instr\n                        | interface_instr\n    interface_instr : INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDERinterface_params : interface_params PUNTOCOMA ID DOSPUNTOS expresion\n                        | ID DOSPUNTOS expresionimprimir_instr : CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMAdeclaracion_instr : LET ID IGUAL expresion PUNTOCOMAasignacion_instr : ID IGUAL expresion PUNTOCOMAif_instr           : IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMAfuncion_instr      : FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMAcall_funcion_instr      : ID PARIZQ expresion COMA expresion PARDER PUNTOCOMAif_else_instr      : IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMAexpresion : expresion MAS expresion\n                  | expresion MENOS expresion\n                  | expresion POR expresion\n                  | expresion DIVIDIDO expresionexpresion : expresion MAYOR expresion\n                  | expresion MENORQUE expresion\n                  | expresion IGUALQUE expresion\n                  | expresion DIFERENTE expresionexpresion : MENOS expresion %prec MENOSUNARIOexpresion : PARIZQ expresion PARDERexpresion    : ENTEROexpresion    : CADENAexpresion    : ID\n                    | ID PUNTO ID'
    
_lr_action_items = {'CONSOLE':([0,2,3,4,5,6,7,8,9,10,11,18,41,58,70,76,80,81,82,86,88,90,91,92,95,96,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-17,-16,12,12,-12,-15,-20,-18,12,12,12,12,-19,-21,]),'LET':([0,2,3,4,5,6,7,8,9,10,11,18,41,58,70,76,80,81,82,86,88,90,91,92,95,96,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-17,-16,13,13,-12,-15,-20,-18,13,13,13,13,-19,-21,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,13,16,17,18,21,22,23,27,30,31,36,37,38,40,41,42,43,44,45,46,47,48,49,52,58,70,71,72,73,76,80,81,82,85,86,88,90,91,92,95,96,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,20,24,25,-2,28,28,28,28,28,28,54,55,28,59,-17,28,28,28,28,28,28,28,28,28,-16,14,77,28,79,14,-12,-15,-20,28,-18,14,14,14,14,-19,-21,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,18,41,58,70,76,80,81,82,86,88,90,91,92,95,96,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-17,-16,15,15,-12,-15,-20,-18,15,15,15,15,-19,-21,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,18,41,58,70,76,80,81,82,86,88,90,91,92,95,96,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-17,-16,16,16,-12,-15,-20,-18,16,16,16,16,-19,-21,]),'INTERFACE':([0,2,3,4,5,6,7,8,9,10,11,18,41,58,70,76,80,81,82,86,88,90,91,92,95,96,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-17,-16,17,17,-12,-15,-20,-18,17,17,17,17,-19,-21,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,18,41,58,80,81,82,86,95,96,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-17,-16,-12,-15,-20,-18,-19,-21,]),'LLAVDER':([3,4,5,6,7,8,9,10,11,18,41,58,73,76,80,81,82,86,91,92,95,96,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-17,-16,80,83,-12,-15,-20,-18,93,94,-19,-21,]),'PUNTO':([12,28,],[19,40,]),'IGUAL':([14,20,],[21,27,]),'PARIZQ':([14,15,21,22,23,24,26,27,30,31,38,42,43,44,45,46,47,48,49,52,72,85,],[22,23,31,31,31,36,38,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'LOG':([19,],[26,]),'MENOS':([21,22,23,27,28,29,30,31,32,33,34,35,38,39,42,43,44,45,46,47,48,49,50,51,52,57,59,60,61,62,63,64,65,66,67,68,69,72,78,85,89,],[30,30,30,30,-34,43,30,30,-32,-33,43,43,30,43,30,30,30,30,30,30,30,30,-30,43,30,43,-35,-22,-23,-24,-25,43,43,43,43,-31,43,30,43,30,43,]),'ENTERO':([21,22,23,27,30,31,38,42,43,44,45,46,47,48,49,52,72,85,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'CADENA':([21,22,23,27,30,31,38,42,43,44,45,46,47,48,49,52,72,85,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'LLAVIZQ':([25,53,84,87,],[37,70,88,90,]),'PUNTOCOMA':([28,29,32,33,39,50,56,59,60,61,62,63,64,65,66,67,68,74,75,78,83,89,93,94,],[-34,41,-32,-33,58,-30,73,-35,-22,-23,-24,-25,-26,-27,-28,-29,-31,81,82,-14,86,-13,95,96,]),'MAS':([28,29,32,33,34,35,39,50,51,57,59,60,61,62,63,64,65,66,67,68,69,78,89,],[-34,42,-32,-33,42,42,42,-30,42,42,-35,-22,-23,-24,-25,42,42,42,42,-31,42,42,42,]),'POR':([28,29,32,33,34,35,39,50,51,57,59,60,61,62,63,64,65,66,67,68,69,78,89,],[-34,44,-32,-33,44,44,44,-30,44,44,-35,44,44,-24,-25,44,44,44,44,-31,44,44,44,]),'DIVIDIDO':([28,29,32,33,34,35,39,50,51,57,59,60,61,62,63,64,65,66,67,68,69,78,89,],[-34,45,-32,-33,45,45,45,-30,45,45,-35,45,45,-24,-25,45,45,45,45,-31,45,45,45,]),'MAYOR':([28,29,32,33,34,35,39,50,51,57,59,60,61,62,63,64,65,66,67,68,69,78,89,],[-34,46,-32,-33,46,46,46,-30,46,46,-35,-22,-23,-24,-25,-26,-27,-28,-29,-31,46,46,46,]),'MENORQUE':([28,29,32,33,34,35,39,50,51,57,59,60,61,62,63,64,65,66,67,68,69,78,89,],[-34,47,-32,-33,47,47,47,-30,47,47,-35,-22,-23,-24,-25,-26,-27,-28,-29,-31,47,47,47,]),'IGUALQUE':([28,29,32,33,34,35,39,50,51,57,59,60,61,62,63,64,65,66,67,68,69,78,89,],[-34,48,-32,-33,48,48,48,-30,48,48,-35,-22,-23,-24,-25,48,48,-28,-29,-31,48,48,48,]),'DIFERENTE':([28,29,32,33,34,35,39,50,51,57,59,60,61,62,63,64,65,66,67,68,69,78,89,],[-34,49,-32,-33,49,49,49,-30,49,49,-35,-22,-23,-24,-25,49,49,-28,-29,-31,49,49,49,]),'COMA':([28,32,33,34,50,54,59,60,61,62,63,64,65,66,67,68,],[-34,-32,-33,52,-30,71,-35,-22,-23,-24,-25,-26,-27,-28,-29,-31,]),'PARDER':([28,32,33,35,50,51,57,59,60,61,62,63,64,65,66,67,68,69,77,],[-34,-32,-33,53,-30,68,74,-35,-22,-23,-24,-25,-26,-27,-28,-29,-31,75,84,]),'DOSPUNTOS':([55,79,],[72,85,]),'ELSE':([83,],[87,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,70,88,90,],[2,76,91,92,]),'instruccion':([0,2,70,76,88,90,91,92,],[3,18,3,18,3,3,18,18,]),'imprimir_instr':([0,2,70,76,88,90,91,92,],[4,4,4,4,4,4,4,4,]),'declaracion_instr':([0,2,70,76,88,90,91,92,],[5,5,5,5,5,5,5,5,]),'asignacion_instr':([0,2,70,76,88,90,91,92,],[6,6,6,6,6,6,6,6,]),'if_instr':([0,2,70,76,88,90,91,92,],[7,7,7,7,7,7,7,7,]),'if_else_instr':([0,2,70,76,88,90,91,92,],[8,8,8,8,8,8,8,8,]),'funcion_instr':([0,2,70,76,88,90,91,92,],[9,9,9,9,9,9,9,9,]),'call_funcion_instr':([0,2,70,76,88,90,91,92,],[10,10,10,10,10,10,10,10,]),'interface_instr':([0,2,70,76,88,90,91,92,],[11,11,11,11,11,11,11,11,]),'expresion':([21,22,23,27,30,31,38,42,43,44,45,46,47,48,49,52,72,85,],[29,34,35,39,50,51,57,60,61,62,63,64,65,66,67,69,78,89,]),'interface_params':([37,],[56,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','gramatica.py',228),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','gramatica.py',237),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',247),
  ('instruccion -> imprimir_instr','instruccion',1,'p_instruccion','gramatica.py',256),
  ('instruccion -> declaracion_instr','instruccion',1,'p_instruccion','gramatica.py',257),
  ('instruccion -> asignacion_instr','instruccion',1,'p_instruccion','gramatica.py',258),
  ('instruccion -> if_instr','instruccion',1,'p_instruccion','gramatica.py',259),
  ('instruccion -> if_else_instr','instruccion',1,'p_instruccion','gramatica.py',260),
  ('instruccion -> funcion_instr','instruccion',1,'p_instruccion','gramatica.py',261),
  ('instruccion -> call_funcion_instr','instruccion',1,'p_instruccion','gramatica.py',262),
  ('instruccion -> interface_instr','instruccion',1,'p_instruccion','gramatica.py',263),
  ('interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER','interface_instr',6,'p_instruccion_interface','gramatica.py',273),
  ('interface_params -> interface_params PUNTOCOMA ID DOSPUNTOS expresion','interface_params',5,'p_instruccion_interface_params','gramatica.py',282),
  ('interface_params -> ID DOSPUNTOS expresion','interface_params',3,'p_instruccion_interface_params','gramatica.py',283),
  ('imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA','imprimir_instr',7,'p_instruccion_console','gramatica.py',306),
  ('declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA','declaracion_instr',5,'p_instruccion_declaracion','gramatica.py',314),
  ('asignacion_instr -> ID IGUAL expresion PUNTOCOMA','asignacion_instr',4,'p_instruccion_asignacion','gramatica.py',323),
  ('if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA','if_instr',8,'p_if_instr','gramatica.py',332),
  ('funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA','funcion_instr',11,'p_funcion_instr','gramatica.py',341),
  ('call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA','call_funcion_instr',7,'p_call_funcion_instr','gramatica.py',351),
  ('if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA','if_else_instr',12,'p_if_else_instr','gramatica.py',361),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','gramatica.py',370),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','gramatica.py',371),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','gramatica.py',372),
  ('expresion -> expresion DIVIDIDO expresion','expresion',3,'p_expresion_binaria','gramatica.py',373),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_logica','gramatica.py',389),
  ('expresion -> expresion MENORQUE expresion','expresion',3,'p_expresion_logica','gramatica.py',390),
  ('expresion -> expresion IGUALQUE expresion','expresion',3,'p_expresion_logica','gramatica.py',391),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresion_logica','gramatica.py',392),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','gramatica.py',418),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_expresion_agrupacion','gramatica.py',427),
  ('expresion -> ENTERO','expresion',1,'p_expresion_number','gramatica.py',436),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','gramatica.py',445),
  ('expresion -> ID','expresion',1,'p_expresion_id','gramatica.py',454),
  ('expresion -> ID PUNTO ID','expresion',3,'p_expresion_id','gramatica.py',455),
]
