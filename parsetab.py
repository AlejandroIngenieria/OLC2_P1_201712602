
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMASMENOSleftPORDIVIDIDOrightUMENOSCADENA COMMENTBLOCK CONSOLE DIVIDIDO DOSPUNTOS ELSE ENTERO ID IF IGUAL IGUALQUE LET LLAVDER LLAVIZQ LOG MAS MAYQUE MENOS MENQUE NIGUALQUE PARDER PARIZQ POR PUNTO PUNTOCOMA TIPONUMBERinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccion instruccion      : imprimir_instr\n                        | declaracion_instr\n                        | asignacion_instr\n                        | if_instr\n                        | if_else_instr\n    imprimir_instr : CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMAdeclaracion_instr : LET ID IGUAL expresion PUNTOCOMAasignacion_instr : ID IGUAL expresion PUNTOCOMAif_instr           : IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMAif_else_instr      : IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMAexpresion : expresion MAS expresion\n                  | expresion MENOS expresion\n                  | expresion POR expresion\n                  | expresion DIVIDIDO expresionexpresion : expresion MAYQUE expresion\n                  | expresion MENQUE expresion\n                  | expresion IGUALQUE expresion\n                  | expresion NIGUALQUE expresionexpresion : MENOS expresion %prec UMENOSexpresion : PARIZQ expresion PARDERexpresion    : ENTEROexpresion    : CADENAexpresion    : ID'
    
_lr_action_items = {'CONSOLE':([0,2,3,4,5,6,7,8,13,29,42,52,54,55,57,59,60,62,],[9,9,-3,-4,-5,-6,-7,-8,-2,-11,-10,9,9,-9,-12,9,9,-13,]),'LET':([0,2,3,4,5,6,7,8,13,29,42,52,54,55,57,59,60,62,],[10,10,-3,-4,-5,-6,-7,-8,-2,-11,-10,10,10,-9,-12,10,10,-13,]),'ID':([0,2,3,4,5,6,7,8,10,13,16,17,19,22,23,27,29,30,31,32,33,34,35,36,37,42,52,54,55,57,59,60,62,],[11,11,-3,-4,-5,-6,-7,-8,15,-2,20,20,20,20,20,20,-11,20,20,20,20,20,20,20,20,-10,11,11,-9,-12,11,11,-13,]),'IF':([0,2,3,4,5,6,7,8,13,29,42,52,54,55,57,59,60,62,],[12,12,-3,-4,-5,-6,-7,-8,-2,-11,-10,12,12,-9,-12,12,12,-13,]),'$end':([1,2,3,4,5,6,7,8,13,29,42,55,57,62,],[0,-1,-3,-4,-5,-6,-7,-8,-2,-11,-10,-9,-12,-13,]),'LLAVDER':([3,4,5,6,7,8,13,29,42,54,55,57,60,62,],[-3,-4,-5,-6,-7,-8,-2,-11,-10,56,-9,-12,61,-13,]),'PUNTO':([9,],[14,]),'IGUAL':([11,15,],[16,19,]),'PARIZQ':([12,16,17,18,19,22,23,27,30,31,32,33,34,35,36,37,],[17,23,23,27,23,23,23,23,23,23,23,23,23,23,23,23,]),'LOG':([14,],[18,]),'MENOS':([16,17,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,41,43,44,45,46,47,48,49,50,51,],[22,22,22,-26,31,22,22,-24,-25,31,22,31,22,22,22,22,22,22,22,22,-22,31,31,-14,-15,-16,-17,31,31,31,31,-23,]),'ENTERO':([16,17,19,22,23,27,30,31,32,33,34,35,36,37,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'CADENA':([16,17,19,22,23,27,30,31,32,33,34,35,36,37,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'PUNTOCOMA':([20,21,24,25,28,38,43,44,45,46,47,48,49,50,51,53,56,61,],[-26,29,-24,-25,42,-22,-14,-15,-16,-17,-18,-19,-20,-21,-23,55,57,62,]),'MAS':([20,21,24,25,26,28,38,39,41,43,44,45,46,47,48,49,50,51,],[-26,30,-24,-25,30,30,-22,30,30,-14,-15,-16,-17,30,30,30,30,-23,]),'POR':([20,21,24,25,26,28,38,39,41,43,44,45,46,47,48,49,50,51,],[-26,32,-24,-25,32,32,-22,32,32,32,32,-16,-17,32,32,32,32,-23,]),'DIVIDIDO':([20,21,24,25,26,28,38,39,41,43,44,45,46,47,48,49,50,51,],[-26,33,-24,-25,33,33,-22,33,33,33,33,-16,-17,33,33,33,33,-23,]),'MAYQUE':([20,21,24,25,26,28,38,39,41,43,44,45,46,47,48,49,50,51,],[-26,34,-24,-25,34,34,-22,34,34,-14,-15,-16,-17,34,34,34,34,-23,]),'MENQUE':([20,21,24,25,26,28,38,39,41,43,44,45,46,47,48,49,50,51,],[-26,35,-24,-25,35,35,-22,35,35,-14,-15,-16,-17,35,35,35,35,-23,]),'IGUALQUE':([20,21,24,25,26,28,38,39,41,43,44,45,46,47,48,49,50,51,],[-26,36,-24,-25,36,36,-22,36,36,-14,-15,-16,-17,36,36,36,36,-23,]),'NIGUALQUE':([20,21,24,25,26,28,38,39,41,43,44,45,46,47,48,49,50,51,],[-26,37,-24,-25,37,37,-22,37,37,-14,-15,-16,-17,37,37,37,37,-23,]),'PARDER':([20,24,25,26,38,39,41,43,44,45,46,47,48,49,50,51,],[-26,-24,-25,40,-22,51,53,-14,-15,-16,-17,-18,-19,-20,-21,-23,]),'LLAVIZQ':([40,58,],[52,59,]),'ELSE':([56,],[58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,52,59,],[2,54,60,]),'instruccion':([0,2,52,54,59,60,],[3,13,3,13,3,13,]),'imprimir_instr':([0,2,52,54,59,60,],[4,4,4,4,4,4,]),'declaracion_instr':([0,2,52,54,59,60,],[5,5,5,5,5,5,]),'asignacion_instr':([0,2,52,54,59,60,],[6,6,6,6,6,6,]),'if_instr':([0,2,52,54,59,60,],[7,7,7,7,7,7,]),'if_else_instr':([0,2,52,54,59,60,],[8,8,8,8,8,8,]),'expresion':([16,17,19,22,23,27,30,31,32,33,34,35,36,37,],[21,26,28,38,39,41,43,44,45,46,47,48,49,50,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','gramatica.py',137),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','gramatica.py',142),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',148),
  ('instruccion -> imprimir_instr','instruccion',1,'p_instruccion','gramatica.py',153),
  ('instruccion -> declaracion_instr','instruccion',1,'p_instruccion','gramatica.py',154),
  ('instruccion -> asignacion_instr','instruccion',1,'p_instruccion','gramatica.py',155),
  ('instruccion -> if_instr','instruccion',1,'p_instruccion','gramatica.py',156),
  ('instruccion -> if_else_instr','instruccion',1,'p_instruccion','gramatica.py',157),
  ('imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA','imprimir_instr',7,'p_instruccion_console','gramatica.py',163),
  ('declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA','declaracion_instr',5,'p_instruccion_declaracion','gramatica.py',168),
  ('asignacion_instr -> ID IGUAL expresion PUNTOCOMA','asignacion_instr',4,'p_instruccion_asignacion','gramatica.py',173),
  ('if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA','if_instr',8,'p_if_instr','gramatica.py',178),
  ('if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA','if_else_instr',12,'p_if_else_instr','gramatica.py',183),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','gramatica.py',188),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','gramatica.py',189),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','gramatica.py',190),
  ('expresion -> expresion DIVIDIDO expresion','expresion',3,'p_expresion_binaria','gramatica.py',191),
  ('expresion -> expresion MAYQUE expresion','expresion',3,'p_expresion_logica','gramatica.py',203),
  ('expresion -> expresion MENQUE expresion','expresion',3,'p_expresion_logica','gramatica.py',204),
  ('expresion -> expresion IGUALQUE expresion','expresion',3,'p_expresion_logica','gramatica.py',205),
  ('expresion -> expresion NIGUALQUE expresion','expresion',3,'p_expresion_logica','gramatica.py',206),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','gramatica.py',218),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_expresion_agrupacion','gramatica.py',223),
  ('expresion -> ENTERO','expresion',1,'p_expresion_number','gramatica.py',228),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','gramatica.py',233),
  ('expresion -> ID','expresion',1,'p_expresion_id','gramatica.py',238),
]
