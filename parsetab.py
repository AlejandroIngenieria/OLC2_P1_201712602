
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMENORQUEMENORIGUALMAYORIGUALMAYORleftIGUALQUEDIFERENTEleftANDleftORleftMASMENOSleftPORDIVIDIDOMODULOrightMENOSNOTAND ARRAY BOOLEAN CADENA CHAR COMA COMMENTBLOCK CONSOLE CONST CORDER CORIZQ DIFERENTE DIVIDIDO DOSMAS DOSMENOS DOSPUNTOS ELSE ENTERO FALSE FLOAT FOR FUNCTION ID IF IGUAL IGUALQUE INTERFACE LET LLAVDER LLAVIZQ LOG MAS MAYOR MAYORIGUAL MENORIGUAL MENORQUE MENOS MODULO NOT NULL NUMBER OR PARDER PARIZQ PARSEFLOAT PARSEINT POR PUNTO PUNTOCOMA QUESTION STRING TOLOWERCASE TOSTRING TOUPPERCASE TRUE TYPEOF VAR WHILEinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccion instruccion  : imprimir_instr PUNTOCOMA\n                    | declaracion_instr PUNTOCOMA\n                    | asignacion_instr PUNTOCOMA\n                    | constante_instr PUNTOCOMA\n                    | if_instr\n                    | if_else_instr\n                    | while_instr\n                    | for_instr\n    imprimir_instr : CONSOLE PUNTO LOG PARIZQ expresionCadena PARDER tipo_dato : STRING\n                  | NUMBER\n                  | FLOAT\n                  | BOOLEAN\n                  | CHAR\n    declaracion_instr : LET ID IGUAL expresion\n                        | VAR ID IGUAL expresion\n                        | LET ID DOSPUNTOS tipo_dato\n                        | VAR ID DOSPUNTOS tipo_dato\n                        | LET ID DOSPUNTOS tipo_dato IGUAL expresion\n                        | VAR ID DOSPUNTOS tipo_dato IGUAL expresion\n                          asignacion_instr : ID IGUAL expresion\n                        | ID MAS IGUAL expresion\n                        | ID MENOS IGUAL expresion\n    constante_instr : CONST ID IGUAL expresion\n                        | CONST ID DOSPUNTOS tipo_dato IGUAL expresion\n                          expresion : expresion MAS expresion\n                  | MENOS expresion\n                  | expresion MENOS expresion\n                  | expresion POR expresion\n                  | expresion DIVIDIDO expresion\n                  | expresion MODULO expresion\n                  expresion :  expresion IGUALQUE expresion\n                  | expresion DIFERENTE expresion\n                  | expresion MAYOR expresion\n                  | expresion MAYORIGUAL expresion\n                  | expresion MENORQUE expresion\n                  | expresion MENORIGUAL expresion\n                  expresion : expresion AND expresion\n                  | expresion OR expresion\n                  | NOT expresionif_instr           : IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDERif_else_instr      : IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDERwhile_instr      : WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDERfor_instr        : FOR PARIZQ VAR ID DOSPUNTOS tipo_dato IGUAL expresion PUNTOCOMA expresion PUNTOCOMA ID DOSMAS PARDER LLAVIZQ instrucciones LLAVDER\n                        | FOR PARIZQ VAR ID DOSPUNTOS tipo_dato IGUAL expresion PUNTOCOMA expresion PUNTOCOMA ID DOSMENOS PARDER LLAVIZQ instrucciones LLAVDER\n    funcion_instr      : FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMAcall_funcion_instr      : ID PARIZQ expresion COMA expresion PARDER PUNTOCOMAinterface_instr : INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDERinterface_params : interface_params PUNTOCOMA ID DOSPUNTOS expresion\n                        | ID DOSPUNTOS expresionexpresion : PARIZQ expresion PARDERexpresion    : ENTERO\n                     decimal : ENTERO PUNTO ENTEROexpresion    : decimal\n                     expresion : TRUE\n                | FALSE\n                | CADENA\n    expresionCadena : CADENA COMA expresionCadena2\n    | CADENA\n    | TRUE\n    | FALSE\n    | decimal\n    | ENTERO\n    expresionCadena2 : CADENA\n    | TRUE\n    | FALSE\n    | decimal\n    | ENTERO\n    parseInt : PARSEINT PARIZQ expresionCadena PARDER PUNTOCOMAparseFloat : PARSEFLOAT PARIZQ expresionCadena PARDER PUNTOCOMAtoString : ID PUNTO TOSTRING PARIZQ PARDERtoLowerCase : ID PUNTO TOLOWERCASE PARIZQ PARDERtoUpperCase : ID PUNTO TOUPPERCASE PARIZQ PARDERtypeof : TYPEOF expresion\n                | TYPEOF IDexpresion    : ID\n                    | ID PUNTO ID'
    
_lr_action_items = {'CONSOLE':([0,2,3,8,9,10,11,20,21,22,23,24,117,118,125,126,134,135,139,141,143,150,151,152,153,154,155,],[12,12,-3,-8,-9,-10,-11,-2,-4,-5,-6,-7,12,12,12,12,-44,-46,12,12,-45,12,12,12,12,-47,-48,]),'LET':([0,2,3,8,9,10,11,20,21,22,23,24,117,118,125,126,134,135,139,141,143,150,151,152,153,154,155,],[13,13,-3,-8,-9,-10,-11,-2,-4,-5,-6,-7,13,13,13,13,-44,-46,13,13,-45,13,13,13,13,-47,-48,]),'VAR':([0,2,3,8,9,10,11,20,21,22,23,24,34,117,118,125,126,134,135,139,141,143,150,151,152,153,154,155,],[15,15,-3,-8,-9,-10,-11,-2,-4,-5,-6,-7,56,15,15,15,15,-44,-46,15,15,-45,15,15,15,15,-47,-48,]),'ID':([0,2,3,8,9,10,11,13,15,16,20,21,22,23,24,27,32,33,36,40,41,42,48,49,50,52,56,65,66,67,68,69,70,71,72,73,74,75,76,77,78,98,115,116,117,118,125,126,134,135,136,139,140,141,143,144,150,151,152,153,154,155,],[14,14,-3,-8,-9,-10,-11,26,30,31,-2,-4,-5,-6,-7,38,38,38,38,38,38,38,38,38,38,38,91,99,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,14,14,14,14,-44,-46,38,14,38,14,-45,145,14,14,14,14,-47,-48,]),'CONST':([0,2,3,8,9,10,11,20,21,22,23,24,117,118,125,126,134,135,139,141,143,150,151,152,153,154,155,],[16,16,-3,-8,-9,-10,-11,-2,-4,-5,-6,-7,16,16,16,16,-44,-46,16,16,-45,16,16,16,16,-47,-48,]),'IF':([0,2,3,8,9,10,11,20,21,22,23,24,117,118,125,126,134,135,139,141,143,150,151,152,153,154,155,],[17,17,-3,-8,-9,-10,-11,-2,-4,-5,-6,-7,17,17,17,17,-44,-46,17,17,-45,17,17,17,17,-47,-48,]),'WHILE':([0,2,3,8,9,10,11,20,21,22,23,24,117,118,125,126,134,135,139,141,143,150,151,152,153,154,155,],[18,18,-3,-8,-9,-10,-11,-2,-4,-5,-6,-7,18,18,18,18,-44,-46,18,18,-45,18,18,18,18,-47,-48,]),'FOR':([0,2,3,8,9,10,11,20,21,22,23,24,117,118,125,126,134,135,139,141,143,150,151,152,153,154,155,],[19,19,-3,-8,-9,-10,-11,-2,-4,-5,-6,-7,19,19,19,19,-44,-46,19,19,-45,19,19,19,19,-47,-48,]),'$end':([1,2,3,8,9,10,11,20,21,22,23,24,134,135,143,154,155,],[0,-1,-3,-8,-9,-10,-11,-2,-4,-5,-6,-7,-44,-46,-45,-47,-48,]),'LLAVDER':([3,8,9,10,11,20,21,22,23,24,125,126,134,135,141,143,152,153,154,155,],[-3,-8,-9,-10,-11,-2,-4,-5,-6,-7,134,135,-44,-46,143,-45,154,155,-47,-48,]),'PUNTOCOMA':([4,5,6,7,38,39,43,44,45,46,47,58,59,60,61,62,63,64,79,80,83,84,85,86,87,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,120,122,123,124,138,142,],[21,22,23,24,-79,-24,-55,-57,-58,-59,-60,-18,-20,-13,-14,-15,-16,-17,-30,-43,-25,-26,-19,-21,-27,-80,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-54,-56,-12,-22,-23,-28,140,144,]),'PUNTO':([12,38,43,97,133,],[25,65,82,82,82,]),'IGUAL':([14,26,28,29,30,31,59,60,61,62,63,64,86,88,127,],[27,36,48,49,50,52,98,-13,-14,-15,-16,-17,115,116,136,]),'MAS':([14,38,39,43,44,45,46,47,54,55,58,79,80,81,83,84,85,87,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,122,123,124,138,142,],[28,-79,66,-55,-57,-58,-59,-60,66,66,66,-30,-43,66,66,66,66,66,-80,-29,-31,-32,-33,-34,66,66,66,66,66,66,66,66,-54,-56,66,66,66,66,66,]),'MENOS':([14,27,32,33,36,38,39,40,41,42,43,44,45,46,47,48,49,50,52,54,55,58,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,122,123,124,136,138,140,142,],[29,40,40,40,40,-79,67,40,40,40,-55,-57,-58,-59,-60,40,40,40,40,67,67,67,40,40,40,40,40,40,40,40,40,40,40,40,40,-30,-43,67,67,67,67,67,40,-80,-29,-31,-32,-33,-34,67,67,67,67,67,67,67,67,-54,-56,40,40,67,67,67,40,67,40,67,]),'PARIZQ':([17,18,19,27,32,33,35,36,40,41,42,48,49,50,52,66,67,68,69,70,71,72,73,74,75,76,77,78,98,115,116,136,140,],[32,33,34,42,42,42,57,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'LOG':([25,],[35,]),'DOSPUNTOS':([26,30,31,91,],[37,51,53,119,]),'NOT':([27,32,33,36,40,41,42,48,49,50,52,66,67,68,69,70,71,72,73,74,75,76,77,78,98,115,116,136,140,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'ENTERO':([27,32,33,36,40,41,42,48,49,50,52,57,66,67,68,69,70,71,72,73,74,75,76,77,78,82,98,115,116,121,136,140,],[43,43,43,43,43,43,43,43,43,43,43,97,43,43,43,43,43,43,43,43,43,43,43,43,43,114,43,43,43,133,43,43,]),'TRUE':([27,32,33,36,40,41,42,48,49,50,52,57,66,67,68,69,70,71,72,73,74,75,76,77,78,98,115,116,121,136,140,],[45,45,45,45,45,45,45,45,45,45,45,94,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,130,45,45,]),'FALSE':([27,32,33,36,40,41,42,48,49,50,52,57,66,67,68,69,70,71,72,73,74,75,76,77,78,98,115,116,121,136,140,],[46,46,46,46,46,46,46,46,46,46,46,95,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,131,46,46,]),'CADENA':([27,32,33,36,40,41,42,48,49,50,52,57,66,67,68,69,70,71,72,73,74,75,76,77,78,98,115,116,121,136,140,],[47,47,47,47,47,47,47,47,47,47,47,93,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,128,47,47,]),'STRING':([37,51,53,119,],[60,60,60,60,]),'NUMBER':([37,51,53,119,],[61,61,61,61,]),'FLOAT':([37,51,53,119,],[62,62,62,62,]),'BOOLEAN':([37,51,53,119,],[63,63,63,63,]),'CHAR':([37,51,53,119,],[64,64,64,64,]),'POR':([38,39,43,44,45,46,47,54,55,58,79,80,81,83,84,85,87,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,122,123,124,138,142,],[-79,68,-55,-57,-58,-59,-60,68,68,68,68,-43,68,68,68,68,68,-80,68,68,-32,-33,-34,68,68,68,68,68,68,68,68,-54,-56,68,68,68,68,68,]),'DIVIDIDO':([38,39,43,44,45,46,47,54,55,58,79,80,81,83,84,85,87,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,122,123,124,138,142,],[-79,69,-55,-57,-58,-59,-60,69,69,69,69,-43,69,69,69,69,69,-80,69,69,-32,-33,-34,69,69,69,69,69,69,69,69,-54,-56,69,69,69,69,69,]),'MODULO':([38,39,43,44,45,46,47,54,55,58,79,80,81,83,84,85,87,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,122,123,124,138,142,],[-79,70,-55,-57,-58,-59,-60,70,70,70,70,-43,70,70,70,70,70,-80,70,70,-32,-33,-34,70,70,70,70,70,70,70,70,-54,-56,70,70,70,70,70,]),'IGUALQUE':([38,39,43,44,45,46,47,54,55,58,79,80,81,83,84,85,87,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,122,123,124,138,142,],[-79,71,-55,-57,-58,-59,-60,71,71,71,-30,-43,71,71,71,71,71,-80,-29,-31,-32,-33,-34,-35,-36,71,71,71,71,-41,-42,-54,-56,71,71,71,71,71,]),'DIFERENTE':([38,39,43,44,45,46,47,54,55,58,79,80,81,83,84,85,87,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,122,123,124,138,142,],[-79,72,-55,-57,-58,-59,-60,72,72,72,-30,-43,72,72,72,72,72,-80,-29,-31,-32,-33,-34,-35,-36,72,72,72,72,-41,-42,-54,-56,72,72,72,72,72,]),'MAYOR':([38,39,43,44,45,46,47,54,55,58,79,80,81,83,84,85,87,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,122,123,124,138,142,],[-79,73,-55,-57,-58,-59,-60,73,73,73,-30,-43,73,73,73,73,73,-80,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-54,-56,73,73,73,73,73,]),'MAYORIGUAL':([38,39,43,44,45,46,47,54,55,58,79,80,81,83,84,85,87,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,122,123,124,138,142,],[-79,74,-55,-57,-58,-59,-60,74,74,74,-30,-43,74,74,74,74,74,-80,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-54,-56,74,74,74,74,74,]),'MENORQUE':([38,39,43,44,45,46,47,54,55,58,79,80,81,83,84,85,87,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,122,123,124,138,142,],[-79,75,-55,-57,-58,-59,-60,75,75,75,-30,-43,75,75,75,75,75,-80,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-54,-56,75,75,75,75,75,]),'MENORIGUAL':([38,39,43,44,45,46,47,54,55,58,79,80,81,83,84,85,87,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,122,123,124,138,142,],[-79,76,-55,-57,-58,-59,-60,76,76,76,-30,-43,76,76,76,76,76,-80,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-54,-56,76,76,76,76,76,]),'AND':([38,39,43,44,45,46,47,54,55,58,79,80,81,83,84,85,87,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,122,123,124,138,142,],[-79,77,-55,-57,-58,-59,-60,77,77,77,-30,-43,77,77,77,77,77,-80,-29,-31,-32,-33,-34,77,77,77,77,77,77,-41,-42,-54,-56,77,77,77,77,77,]),'OR':([38,39,43,44,45,46,47,54,55,58,79,80,81,83,84,85,87,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,122,123,124,138,142,],[-79,78,-55,-57,-58,-59,-60,78,78,78,-30,-43,78,78,78,78,78,-80,-29,-31,-32,-33,-34,78,78,78,78,78,78,78,-42,-54,-56,78,78,78,78,78,]),'PARDER':([38,43,44,45,46,47,54,55,79,80,81,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,128,129,130,131,132,133,146,147,],[-79,-55,-57,-58,-59,-60,89,90,-30,-43,113,120,-62,-63,-64,-65,-66,-80,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-54,-56,-67,-61,-68,-69,-70,-71,148,149,]),'LLAVIZQ':([89,90,137,148,149,],[117,118,139,150,151,]),'COMA':([93,],[121,]),'ELSE':([134,],[137,]),'DOSMAS':([145,],[146,]),'DOSMENOS':([145,],[147,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,117,118,139,150,151,],[2,125,126,141,152,153,]),'instruccion':([0,2,117,118,125,126,139,141,150,151,152,153,],[3,20,3,3,20,20,3,20,3,3,20,20,]),'imprimir_instr':([0,2,117,118,125,126,139,141,150,151,152,153,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'declaracion_instr':([0,2,117,118,125,126,139,141,150,151,152,153,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'asignacion_instr':([0,2,117,118,125,126,139,141,150,151,152,153,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'constante_instr':([0,2,117,118,125,126,139,141,150,151,152,153,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'if_instr':([0,2,117,118,125,126,139,141,150,151,152,153,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'if_else_instr':([0,2,117,118,125,126,139,141,150,151,152,153,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'while_instr':([0,2,117,118,125,126,139,141,150,151,152,153,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'for_instr':([0,2,117,118,125,126,139,141,150,151,152,153,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'expresion':([27,32,33,36,40,41,42,48,49,50,52,66,67,68,69,70,71,72,73,74,75,76,77,78,98,115,116,136,140,],[39,54,55,58,79,80,81,83,84,85,87,100,101,102,103,104,105,106,107,108,109,110,111,112,122,123,124,138,142,]),'decimal':([27,32,33,36,40,41,42,48,49,50,52,57,66,67,68,69,70,71,72,73,74,75,76,77,78,98,115,116,121,136,140,],[44,44,44,44,44,44,44,44,44,44,44,96,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,132,44,44,]),'tipo_dato':([37,51,53,119,],[59,86,88,127,]),'expresionCadena':([57,],[92,]),'expresionCadena2':([121,],[129,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','gramatica.py',16),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','gramatica.py',25),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',35),
  ('instruccion -> imprimir_instr PUNTOCOMA','instruccion',2,'p_instruccion','gramatica.py',44),
  ('instruccion -> declaracion_instr PUNTOCOMA','instruccion',2,'p_instruccion','gramatica.py',45),
  ('instruccion -> asignacion_instr PUNTOCOMA','instruccion',2,'p_instruccion','gramatica.py',46),
  ('instruccion -> constante_instr PUNTOCOMA','instruccion',2,'p_instruccion','gramatica.py',47),
  ('instruccion -> if_instr','instruccion',1,'p_instruccion','gramatica.py',48),
  ('instruccion -> if_else_instr','instruccion',1,'p_instruccion','gramatica.py',49),
  ('instruccion -> while_instr','instruccion',1,'p_instruccion','gramatica.py',50),
  ('instruccion -> for_instr','instruccion',1,'p_instruccion','gramatica.py',51),
  ('imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresionCadena PARDER','imprimir_instr',6,'p_instruccion_console','gramatica.py',63),
  ('tipo_dato -> STRING','tipo_dato',1,'p_tipo_dato','gramatica.py',72),
  ('tipo_dato -> NUMBER','tipo_dato',1,'p_tipo_dato','gramatica.py',73),
  ('tipo_dato -> FLOAT','tipo_dato',1,'p_tipo_dato','gramatica.py',74),
  ('tipo_dato -> BOOLEAN','tipo_dato',1,'p_tipo_dato','gramatica.py',75),
  ('tipo_dato -> CHAR','tipo_dato',1,'p_tipo_dato','gramatica.py',76),
  ('declaracion_instr -> LET ID IGUAL expresion','declaracion_instr',4,'p_instruccion_declaracion','gramatica.py',86),
  ('declaracion_instr -> VAR ID IGUAL expresion','declaracion_instr',4,'p_instruccion_declaracion','gramatica.py',87),
  ('declaracion_instr -> LET ID DOSPUNTOS tipo_dato','declaracion_instr',4,'p_instruccion_declaracion','gramatica.py',88),
  ('declaracion_instr -> VAR ID DOSPUNTOS tipo_dato','declaracion_instr',4,'p_instruccion_declaracion','gramatica.py',89),
  ('declaracion_instr -> LET ID DOSPUNTOS tipo_dato IGUAL expresion','declaracion_instr',6,'p_instruccion_declaracion','gramatica.py',90),
  ('declaracion_instr -> VAR ID DOSPUNTOS tipo_dato IGUAL expresion','declaracion_instr',6,'p_instruccion_declaracion','gramatica.py',91),
  ('asignacion_instr -> ID IGUAL expresion','asignacion_instr',3,'p_instruccion_asignacion','gramatica.py',107),
  ('asignacion_instr -> ID MAS IGUAL expresion','asignacion_instr',4,'p_instruccion_asignacion','gramatica.py',108),
  ('asignacion_instr -> ID MENOS IGUAL expresion','asignacion_instr',4,'p_instruccion_asignacion','gramatica.py',109),
  ('constante_instr -> CONST ID IGUAL expresion','constante_instr',4,'p_instruccion_constantes','gramatica.py',125),
  ('constante_instr -> CONST ID DOSPUNTOS tipo_dato IGUAL expresion','constante_instr',6,'p_instruccion_constantes','gramatica.py',126),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','gramatica.py',140),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_binaria','gramatica.py',141),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','gramatica.py',142),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','gramatica.py',143),
  ('expresion -> expresion DIVIDIDO expresion','expresion',3,'p_expresion_binaria','gramatica.py',144),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_binaria','gramatica.py',145),
  ('expresion -> expresion IGUALQUE expresion','expresion',3,'p_expresion_logica','gramatica.py',167),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresion_logica','gramatica.py',168),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_logica','gramatica.py',169),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_logica','gramatica.py',170),
  ('expresion -> expresion MENORQUE expresion','expresion',3,'p_expresion_logica','gramatica.py',171),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_logica','gramatica.py',172),
  ('expresion -> expresion AND expresion','expresion',3,'p_operacion_logica','gramatica.py',193),
  ('expresion -> expresion OR expresion','expresion',3,'p_operacion_logica','gramatica.py',194),
  ('expresion -> NOT expresion','expresion',2,'p_operacion_logica','gramatica.py',195),
  ('if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER','if_instr',7,'p_if_instr','gramatica.py',219),
  ('if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER','if_else_instr',11,'p_if_else_instr','gramatica.py',228),
  ('while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER','while_instr',7,'p_while_instr','gramatica.py',236),
  ('for_instr -> FOR PARIZQ VAR ID DOSPUNTOS tipo_dato IGUAL expresion PUNTOCOMA expresion PUNTOCOMA ID DOSMAS PARDER LLAVIZQ instrucciones LLAVDER','for_instr',17,'p_for_instr','gramatica.py',245),
  ('for_instr -> FOR PARIZQ VAR ID DOSPUNTOS tipo_dato IGUAL expresion PUNTOCOMA expresion PUNTOCOMA ID DOSMENOS PARDER LLAVIZQ instrucciones LLAVDER','for_instr',17,'p_for_instr','gramatica.py',246),
  ('funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA','funcion_instr',11,'p_funcion_instr','gramatica.py',261),
  ('call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA','call_funcion_instr',7,'p_call_funcion_instr','gramatica.py',271),
  ('interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER','interface_instr',6,'p_instruccion_interface','gramatica.py',282),
  ('interface_params -> interface_params PUNTOCOMA ID DOSPUNTOS expresion','interface_params',5,'p_instruccion_interface_params','gramatica.py',291),
  ('interface_params -> ID DOSPUNTOS expresion','interface_params',3,'p_instruccion_interface_params','gramatica.py',292),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_expresion_agrupacion','gramatica.py',307),
  ('expresion -> ENTERO','expresion',1,'p_expresion_number','gramatica.py',316),
  ('decimal -> ENTERO PUNTO ENTERO','decimal',3,'p_decimal','gramatica.py',326),
  ('expresion -> decimal','expresion',1,'p_expresion_decimal','gramatica.py',332),
  ('expresion -> TRUE','expresion',1,'p_expresion_cadenas','gramatica.py',342),
  ('expresion -> FALSE','expresion',1,'p_expresion_cadenas','gramatica.py',343),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadenas','gramatica.py',344),
  ('expresionCadena -> CADENA COMA expresionCadena2','expresionCadena',3,'p_expresion_cadena','gramatica.py',350),
  ('expresionCadena -> CADENA','expresionCadena',1,'p_expresion_cadena','gramatica.py',351),
  ('expresionCadena -> TRUE','expresionCadena',1,'p_expresion_cadena','gramatica.py',352),
  ('expresionCadena -> FALSE','expresionCadena',1,'p_expresion_cadena','gramatica.py',353),
  ('expresionCadena -> decimal','expresionCadena',1,'p_expresion_cadena','gramatica.py',354),
  ('expresionCadena -> ENTERO','expresionCadena',1,'p_expresion_cadena','gramatica.py',355),
  ('expresionCadena2 -> CADENA','expresionCadena2',1,'p_expresion_cadena2','gramatica.py',366),
  ('expresionCadena2 -> TRUE','expresionCadena2',1,'p_expresion_cadena2','gramatica.py',367),
  ('expresionCadena2 -> FALSE','expresionCadena2',1,'p_expresion_cadena2','gramatica.py',368),
  ('expresionCadena2 -> decimal','expresionCadena2',1,'p_expresion_cadena2','gramatica.py',369),
  ('expresionCadena2 -> ENTERO','expresionCadena2',1,'p_expresion_cadena2','gramatica.py',370),
  ('parseInt -> PARSEINT PARIZQ expresionCadena PARDER PUNTOCOMA','parseInt',5,'p_parseInt','gramatica.py',381),
  ('parseFloat -> PARSEFLOAT PARIZQ expresionCadena PARDER PUNTOCOMA','parseFloat',5,'p_parseFloat','gramatica.py',390),
  ('toString -> ID PUNTO TOSTRING PARIZQ PARDER','toString',5,'p_toString','gramatica.py',399),
  ('toLowerCase -> ID PUNTO TOLOWERCASE PARIZQ PARDER','toLowerCase',5,'p_toLowerCase','gramatica.py',407),
  ('toUpperCase -> ID PUNTO TOUPPERCASE PARIZQ PARDER','toUpperCase',5,'p_toUpperCase','gramatica.py',414),
  ('typeof -> TYPEOF expresion','typeof',2,'p_typeof','gramatica.py',421),
  ('typeof -> TYPEOF ID','typeof',2,'p_typeof','gramatica.py',422),
  ('expresion -> ID','expresion',1,'p_expresion_id','gramatica.py',429),
  ('expresion -> ID PUNTO ID','expresion',3,'p_expresion_id','gramatica.py',430),
]
