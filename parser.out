Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ARRAY
    COMMENTBLOCK
    CORDER
    CORIZQ
    MAYORIGUAL
    MENORIGUAL
    MENOSUNARIO
    MODULO
    NOT
    NULL
    NUMBER
    OR
    STRING
    TIPOBOOLEAN
    TIPOCHAR
    TIPOFLOAT
    TIPONUMBER
    TIPOSTRING

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> imprimir_instr
Rule 5     instruccion -> declaracion_instr
Rule 6     instruccion -> asignacion_instr
Rule 7     instruccion -> if_instr
Rule 8     instruccion -> if_else_instr
Rule 9     instruccion -> funcion_instr
Rule 10    instruccion -> call_funcion_instr
Rule 11    instruccion -> interface_instr
Rule 12    interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER
Rule 13    interface_params -> interface_params PUNTOCOMA ID DOSPUNTOS expresion
Rule 14    interface_params -> ID DOSPUNTOS expresion
Rule 15    imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
Rule 16    declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA
Rule 17    asignacion_instr -> ID IGUAL expresion PUNTOCOMA
Rule 18    if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
Rule 19    funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
Rule 20    call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA
Rule 21    if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
Rule 22    expresion -> expresion MAS expresion
Rule 23    expresion -> expresion MENOS expresion
Rule 24    expresion -> expresion POR expresion
Rule 25    expresion -> expresion DIVIDIDO expresion
Rule 26    expresion -> expresion MAYOR expresion
Rule 27    expresion -> expresion MENORQUE expresion
Rule 28    expresion -> expresion IGUALQUE expresion
Rule 29    expresion -> expresion DIFERENTE expresion
Rule 30    expresion -> MENOS expresion
Rule 31    expresion -> PARIZQ expresion PARDER
Rule 32    expresion -> ENTERO
Rule 33    expresion -> CADENA
Rule 34    expresion -> ID
Rule 35    expresion -> ID PUNTO ID

Terminals, with rules where they appear

AND                  : 
ARRAY                : 
CADENA               : 33
COMA                 : 19 20
COMMENTBLOCK         : 
CONSOLE              : 15
CORDER               : 
CORIZQ               : 
DIFERENTE            : 29
DIVIDIDO             : 25
DOSPUNTOS            : 13 14
ELSE                 : 21
ENTERO               : 32
FUNCTION             : 19
ID                   : 12 13 14 16 17 19 19 19 20 34 35 35
IF                   : 18 21
IGUAL                : 16 17
IGUALQUE             : 28
INTERFACE            : 12
LET                  : 16
LLAVDER              : 12 18 19 21 21
LLAVIZQ              : 12 18 19 21 21
LOG                  : 15
MAS                  : 22
MAYOR                : 26
MAYORIGUAL           : 
MENORIGUAL           : 
MENORQUE             : 27
MENOS                : 23 30
MENOSUNARIO          : 
MODULO               : 
NOT                  : 
NULL                 : 
NUMBER               : 
OR                   : 
PARDER               : 15 18 19 20 21 31
PARIZQ               : 15 18 19 20 21 31
POR                  : 24
PUNTO                : 15 35
PUNTOCOMA            : 12 13 15 16 17 18 19 20 21
STRING               : 
TIPOBOOLEAN          : 
TIPOCHAR             : 
TIPOFLOAT            : 
TIPONUMBER           : 
TIPOSTRING           : 
error                : 

Nonterminals, with rules where they appear

asignacion_instr     : 6
call_funcion_instr   : 10
declaracion_instr    : 5
expresion            : 13 14 15 16 17 18 20 20 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 31
funcion_instr        : 9
if_else_instr        : 8
if_instr             : 7
imprimir_instr       : 4
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 18 19 21 21
interface_instr      : 11
interface_params     : 12 13

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) instruccion -> . interface_instr
    (15) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (16) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (17) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (18) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (21) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (19) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (20) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA
    (12) interface_instr -> . INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER

    CONSOLE         shift and go to state 12
    LET             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    FUNCTION        shift and go to state 16
    INTERFACE       shift and go to state 17

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10
    interface_instr                shift and go to state 11

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) instruccion -> . interface_instr
    (15) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (16) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (17) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (18) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (21) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (19) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (20) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA
    (12) interface_instr -> . INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER

    $end            reduce using rule 1 (init -> instrucciones .)
    CONSOLE         shift and go to state 12
    LET             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    FUNCTION        shift and go to state 16
    INTERFACE       shift and go to state 17

    instruccion                    shift and go to state 18
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10
    interface_instr                shift and go to state 11

state 3

    (3) instrucciones -> instruccion .

    CONSOLE         reduce using rule 3 (instrucciones -> instruccion .)
    LET             reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    FUNCTION        reduce using rule 3 (instrucciones -> instruccion .)
    INTERFACE       reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVDER         reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> imprimir_instr .

    CONSOLE         reduce using rule 4 (instruccion -> imprimir_instr .)
    LET             reduce using rule 4 (instruccion -> imprimir_instr .)
    ID              reduce using rule 4 (instruccion -> imprimir_instr .)
    IF              reduce using rule 4 (instruccion -> imprimir_instr .)
    FUNCTION        reduce using rule 4 (instruccion -> imprimir_instr .)
    INTERFACE       reduce using rule 4 (instruccion -> imprimir_instr .)
    $end            reduce using rule 4 (instruccion -> imprimir_instr .)
    LLAVDER         reduce using rule 4 (instruccion -> imprimir_instr .)


state 5

    (5) instruccion -> declaracion_instr .

    CONSOLE         reduce using rule 5 (instruccion -> declaracion_instr .)
    LET             reduce using rule 5 (instruccion -> declaracion_instr .)
    ID              reduce using rule 5 (instruccion -> declaracion_instr .)
    IF              reduce using rule 5 (instruccion -> declaracion_instr .)
    FUNCTION        reduce using rule 5 (instruccion -> declaracion_instr .)
    INTERFACE       reduce using rule 5 (instruccion -> declaracion_instr .)
    $end            reduce using rule 5 (instruccion -> declaracion_instr .)
    LLAVDER         reduce using rule 5 (instruccion -> declaracion_instr .)


state 6

    (6) instruccion -> asignacion_instr .

    CONSOLE         reduce using rule 6 (instruccion -> asignacion_instr .)
    LET             reduce using rule 6 (instruccion -> asignacion_instr .)
    ID              reduce using rule 6 (instruccion -> asignacion_instr .)
    IF              reduce using rule 6 (instruccion -> asignacion_instr .)
    FUNCTION        reduce using rule 6 (instruccion -> asignacion_instr .)
    INTERFACE       reduce using rule 6 (instruccion -> asignacion_instr .)
    $end            reduce using rule 6 (instruccion -> asignacion_instr .)
    LLAVDER         reduce using rule 6 (instruccion -> asignacion_instr .)


state 7

    (7) instruccion -> if_instr .

    CONSOLE         reduce using rule 7 (instruccion -> if_instr .)
    LET             reduce using rule 7 (instruccion -> if_instr .)
    ID              reduce using rule 7 (instruccion -> if_instr .)
    IF              reduce using rule 7 (instruccion -> if_instr .)
    FUNCTION        reduce using rule 7 (instruccion -> if_instr .)
    INTERFACE       reduce using rule 7 (instruccion -> if_instr .)
    $end            reduce using rule 7 (instruccion -> if_instr .)
    LLAVDER         reduce using rule 7 (instruccion -> if_instr .)


state 8

    (8) instruccion -> if_else_instr .

    CONSOLE         reduce using rule 8 (instruccion -> if_else_instr .)
    LET             reduce using rule 8 (instruccion -> if_else_instr .)
    ID              reduce using rule 8 (instruccion -> if_else_instr .)
    IF              reduce using rule 8 (instruccion -> if_else_instr .)
    FUNCTION        reduce using rule 8 (instruccion -> if_else_instr .)
    INTERFACE       reduce using rule 8 (instruccion -> if_else_instr .)
    $end            reduce using rule 8 (instruccion -> if_else_instr .)
    LLAVDER         reduce using rule 8 (instruccion -> if_else_instr .)


state 9

    (9) instruccion -> funcion_instr .

    CONSOLE         reduce using rule 9 (instruccion -> funcion_instr .)
    LET             reduce using rule 9 (instruccion -> funcion_instr .)
    ID              reduce using rule 9 (instruccion -> funcion_instr .)
    IF              reduce using rule 9 (instruccion -> funcion_instr .)
    FUNCTION        reduce using rule 9 (instruccion -> funcion_instr .)
    INTERFACE       reduce using rule 9 (instruccion -> funcion_instr .)
    $end            reduce using rule 9 (instruccion -> funcion_instr .)
    LLAVDER         reduce using rule 9 (instruccion -> funcion_instr .)


state 10

    (10) instruccion -> call_funcion_instr .

    CONSOLE         reduce using rule 10 (instruccion -> call_funcion_instr .)
    LET             reduce using rule 10 (instruccion -> call_funcion_instr .)
    ID              reduce using rule 10 (instruccion -> call_funcion_instr .)
    IF              reduce using rule 10 (instruccion -> call_funcion_instr .)
    FUNCTION        reduce using rule 10 (instruccion -> call_funcion_instr .)
    INTERFACE       reduce using rule 10 (instruccion -> call_funcion_instr .)
    $end            reduce using rule 10 (instruccion -> call_funcion_instr .)
    LLAVDER         reduce using rule 10 (instruccion -> call_funcion_instr .)


state 11

    (11) instruccion -> interface_instr .

    CONSOLE         reduce using rule 11 (instruccion -> interface_instr .)
    LET             reduce using rule 11 (instruccion -> interface_instr .)
    ID              reduce using rule 11 (instruccion -> interface_instr .)
    IF              reduce using rule 11 (instruccion -> interface_instr .)
    FUNCTION        reduce using rule 11 (instruccion -> interface_instr .)
    INTERFACE       reduce using rule 11 (instruccion -> interface_instr .)
    $end            reduce using rule 11 (instruccion -> interface_instr .)
    LLAVDER         reduce using rule 11 (instruccion -> interface_instr .)


state 12

    (15) imprimir_instr -> CONSOLE . PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA

    PUNTO           shift and go to state 19


state 13

    (16) declaracion_instr -> LET . ID IGUAL expresion PUNTOCOMA

    ID              shift and go to state 20


state 14

    (17) asignacion_instr -> ID . IGUAL expresion PUNTOCOMA
    (20) call_funcion_instr -> ID . PARIZQ expresion COMA expresion PARDER PUNTOCOMA

    IGUAL           shift and go to state 21
    PARIZQ          shift and go to state 22


state 15

    (18) if_instr -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (21) if_else_instr -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    PARIZQ          shift and go to state 23


state 16

    (19) funcion_instr -> FUNCTION . ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    ID              shift and go to state 24


state 17

    (12) interface_instr -> INTERFACE . ID LLAVIZQ interface_params PUNTOCOMA LLAVDER

    ID              shift and go to state 25


state 18

    (2) instrucciones -> instrucciones instruccion .

    CONSOLE         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FUNCTION        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    INTERFACE       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVDER         reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 19

    (15) imprimir_instr -> CONSOLE PUNTO . LOG PARIZQ expresion PARDER PUNTOCOMA

    LOG             shift and go to state 26


state 20

    (16) declaracion_instr -> LET ID . IGUAL expresion PUNTOCOMA

    IGUAL           shift and go to state 27


state 21

    (17) asignacion_instr -> ID IGUAL . expresion PUNTOCOMA
    (22) expresion -> . expresion MAS expresion
    (23) expresion -> . expresion MENOS expresion
    (24) expresion -> . expresion POR expresion
    (25) expresion -> . expresion DIVIDIDO expresion
    (26) expresion -> . expresion MAYOR expresion
    (27) expresion -> . expresion MENORQUE expresion
    (28) expresion -> . expresion IGUALQUE expresion
    (29) expresion -> . expresion DIFERENTE expresion
    (30) expresion -> . MENOS expresion
    (31) expresion -> . PARIZQ expresion PARDER
    (32) expresion -> . ENTERO
    (33) expresion -> . CADENA
    (34) expresion -> . ID
    (35) expresion -> . ID PUNTO ID

    MENOS           shift and go to state 30
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 32
    CADENA          shift and go to state 33
    ID              shift and go to state 28

    expresion                      shift and go to state 29

state 22

    (20) call_funcion_instr -> ID PARIZQ . expresion COMA expresion PARDER PUNTOCOMA
    (22) expresion -> . expresion MAS expresion
    (23) expresion -> . expresion MENOS expresion
    (24) expresion -> . expresion POR expresion
    (25) expresion -> . expresion DIVIDIDO expresion
    (26) expresion -> . expresion MAYOR expresion
    (27) expresion -> . expresion MENORQUE expresion
    (28) expresion -> . expresion IGUALQUE expresion
    (29) expresion -> . expresion DIFERENTE expresion
    (30) expresion -> . MENOS expresion
    (31) expresion -> . PARIZQ expresion PARDER
    (32) expresion -> . ENTERO
    (33) expresion -> . CADENA
    (34) expresion -> . ID
    (35) expresion -> . ID PUNTO ID

    MENOS           shift and go to state 30
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 32
    CADENA          shift and go to state 33
    ID              shift and go to state 28

    expresion                      shift and go to state 34

state 23

    (18) if_instr -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (21) if_else_instr -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (22) expresion -> . expresion MAS expresion
    (23) expresion -> . expresion MENOS expresion
    (24) expresion -> . expresion POR expresion
    (25) expresion -> . expresion DIVIDIDO expresion
    (26) expresion -> . expresion MAYOR expresion
    (27) expresion -> . expresion MENORQUE expresion
    (28) expresion -> . expresion IGUALQUE expresion
    (29) expresion -> . expresion DIFERENTE expresion
    (30) expresion -> . MENOS expresion
    (31) expresion -> . PARIZQ expresion PARDER
    (32) expresion -> . ENTERO
    (33) expresion -> . CADENA
    (34) expresion -> . ID
    (35) expresion -> . ID PUNTO ID

    MENOS           shift and go to state 30
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 32
    CADENA          shift and go to state 33
    ID              shift and go to state 28

    expresion                      shift and go to state 35

state 24

    (19) funcion_instr -> FUNCTION ID . PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    PARIZQ          shift and go to state 36


state 25

    (12) interface_instr -> INTERFACE ID . LLAVIZQ interface_params PUNTOCOMA LLAVDER

    LLAVIZQ         shift and go to state 37


state 26

    (15) imprimir_instr -> CONSOLE PUNTO LOG . PARIZQ expresion PARDER PUNTOCOMA

    PARIZQ          shift and go to state 38


state 27

    (16) declaracion_instr -> LET ID IGUAL . expresion PUNTOCOMA
    (22) expresion -> . expresion MAS expresion
    (23) expresion -> . expresion MENOS expresion
    (24) expresion -> . expresion POR expresion
    (25) expresion -> . expresion DIVIDIDO expresion
    (26) expresion -> . expresion MAYOR expresion
    (27) expresion -> . expresion MENORQUE expresion
    (28) expresion -> . expresion IGUALQUE expresion
    (29) expresion -> . expresion DIFERENTE expresion
    (30) expresion -> . MENOS expresion
    (31) expresion -> . PARIZQ expresion PARDER
    (32) expresion -> . ENTERO
    (33) expresion -> . CADENA
    (34) expresion -> . ID
    (35) expresion -> . ID PUNTO ID

    MENOS           shift and go to state 30
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 32
    CADENA          shift and go to state 33
    ID              shift and go to state 28

    expresion                      shift and go to state 39

state 28

    (34) expresion -> ID .
    (35) expresion -> ID . PUNTO ID

    PUNTOCOMA       reduce using rule 34 (expresion -> ID .)
    MAS             reduce using rule 34 (expresion -> ID .)
    MENOS           reduce using rule 34 (expresion -> ID .)
    POR             reduce using rule 34 (expresion -> ID .)
    DIVIDIDO        reduce using rule 34 (expresion -> ID .)
    MAYOR           reduce using rule 34 (expresion -> ID .)
    MENORQUE        reduce using rule 34 (expresion -> ID .)
    IGUALQUE        reduce using rule 34 (expresion -> ID .)
    DIFERENTE       reduce using rule 34 (expresion -> ID .)
    COMA            reduce using rule 34 (expresion -> ID .)
    PARDER          reduce using rule 34 (expresion -> ID .)
    PUNTO           shift and go to state 40


state 29

    (17) asignacion_instr -> ID IGUAL expresion . PUNTOCOMA
    (22) expresion -> expresion . MAS expresion
    (23) expresion -> expresion . MENOS expresion
    (24) expresion -> expresion . POR expresion
    (25) expresion -> expresion . DIVIDIDO expresion
    (26) expresion -> expresion . MAYOR expresion
    (27) expresion -> expresion . MENORQUE expresion
    (28) expresion -> expresion . IGUALQUE expresion
    (29) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       shift and go to state 41
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENORQUE        shift and go to state 47
    IGUALQUE        shift and go to state 48
    DIFERENTE       shift and go to state 49


state 30

    (30) expresion -> MENOS . expresion
    (22) expresion -> . expresion MAS expresion
    (23) expresion -> . expresion MENOS expresion
    (24) expresion -> . expresion POR expresion
    (25) expresion -> . expresion DIVIDIDO expresion
    (26) expresion -> . expresion MAYOR expresion
    (27) expresion -> . expresion MENORQUE expresion
    (28) expresion -> . expresion IGUALQUE expresion
    (29) expresion -> . expresion DIFERENTE expresion
    (30) expresion -> . MENOS expresion
    (31) expresion -> . PARIZQ expresion PARDER
    (32) expresion -> . ENTERO
    (33) expresion -> . CADENA
    (34) expresion -> . ID
    (35) expresion -> . ID PUNTO ID

    MENOS           shift and go to state 30
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 32
    CADENA          shift and go to state 33
    ID              shift and go to state 28

    expresion                      shift and go to state 50

state 31

    (31) expresion -> PARIZQ . expresion PARDER
    (22) expresion -> . expresion MAS expresion
    (23) expresion -> . expresion MENOS expresion
    (24) expresion -> . expresion POR expresion
    (25) expresion -> . expresion DIVIDIDO expresion
    (26) expresion -> . expresion MAYOR expresion
    (27) expresion -> . expresion MENORQUE expresion
    (28) expresion -> . expresion IGUALQUE expresion
    (29) expresion -> . expresion DIFERENTE expresion
    (30) expresion -> . MENOS expresion
    (31) expresion -> . PARIZQ expresion PARDER
    (32) expresion -> . ENTERO
    (33) expresion -> . CADENA
    (34) expresion -> . ID
    (35) expresion -> . ID PUNTO ID

    MENOS           shift and go to state 30
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 32
    CADENA          shift and go to state 33
    ID              shift and go to state 28

    expresion                      shift and go to state 51

state 32

    (32) expresion -> ENTERO .

    PUNTOCOMA       reduce using rule 32 (expresion -> ENTERO .)
    MAS             reduce using rule 32 (expresion -> ENTERO .)
    MENOS           reduce using rule 32 (expresion -> ENTERO .)
    POR             reduce using rule 32 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 32 (expresion -> ENTERO .)
    MAYOR           reduce using rule 32 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 32 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 32 (expresion -> ENTERO .)
    DIFERENTE       reduce using rule 32 (expresion -> ENTERO .)
    COMA            reduce using rule 32 (expresion -> ENTERO .)
    PARDER          reduce using rule 32 (expresion -> ENTERO .)


state 33

    (33) expresion -> CADENA .

    PUNTOCOMA       reduce using rule 33 (expresion -> CADENA .)
    MAS             reduce using rule 33 (expresion -> CADENA .)
    MENOS           reduce using rule 33 (expresion -> CADENA .)
    POR             reduce using rule 33 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 33 (expresion -> CADENA .)
    MAYOR           reduce using rule 33 (expresion -> CADENA .)
    MENORQUE        reduce using rule 33 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 33 (expresion -> CADENA .)
    DIFERENTE       reduce using rule 33 (expresion -> CADENA .)
    COMA            reduce using rule 33 (expresion -> CADENA .)
    PARDER          reduce using rule 33 (expresion -> CADENA .)


state 34

    (20) call_funcion_instr -> ID PARIZQ expresion . COMA expresion PARDER PUNTOCOMA
    (22) expresion -> expresion . MAS expresion
    (23) expresion -> expresion . MENOS expresion
    (24) expresion -> expresion . POR expresion
    (25) expresion -> expresion . DIVIDIDO expresion
    (26) expresion -> expresion . MAYOR expresion
    (27) expresion -> expresion . MENORQUE expresion
    (28) expresion -> expresion . IGUALQUE expresion
    (29) expresion -> expresion . DIFERENTE expresion

    COMA            shift and go to state 52
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENORQUE        shift and go to state 47
    IGUALQUE        shift and go to state 48
    DIFERENTE       shift and go to state 49


state 35

    (18) if_instr -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (21) if_else_instr -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (22) expresion -> expresion . MAS expresion
    (23) expresion -> expresion . MENOS expresion
    (24) expresion -> expresion . POR expresion
    (25) expresion -> expresion . DIVIDIDO expresion
    (26) expresion -> expresion . MAYOR expresion
    (27) expresion -> expresion . MENORQUE expresion
    (28) expresion -> expresion . IGUALQUE expresion
    (29) expresion -> expresion . DIFERENTE expresion

    PARDER          shift and go to state 53
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENORQUE        shift and go to state 47
    IGUALQUE        shift and go to state 48
    DIFERENTE       shift and go to state 49


state 36

    (19) funcion_instr -> FUNCTION ID PARIZQ . ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    ID              shift and go to state 54


state 37

    (12) interface_instr -> INTERFACE ID LLAVIZQ . interface_params PUNTOCOMA LLAVDER
    (13) interface_params -> . interface_params PUNTOCOMA ID DOSPUNTOS expresion
    (14) interface_params -> . ID DOSPUNTOS expresion

    ID              shift and go to state 55

    interface_params               shift and go to state 56

state 38

    (15) imprimir_instr -> CONSOLE PUNTO LOG PARIZQ . expresion PARDER PUNTOCOMA
    (22) expresion -> . expresion MAS expresion
    (23) expresion -> . expresion MENOS expresion
    (24) expresion -> . expresion POR expresion
    (25) expresion -> . expresion DIVIDIDO expresion
    (26) expresion -> . expresion MAYOR expresion
    (27) expresion -> . expresion MENORQUE expresion
    (28) expresion -> . expresion IGUALQUE expresion
    (29) expresion -> . expresion DIFERENTE expresion
    (30) expresion -> . MENOS expresion
    (31) expresion -> . PARIZQ expresion PARDER
    (32) expresion -> . ENTERO
    (33) expresion -> . CADENA
    (34) expresion -> . ID
    (35) expresion -> . ID PUNTO ID

    MENOS           shift and go to state 30
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 32
    CADENA          shift and go to state 33
    ID              shift and go to state 28

    expresion                      shift and go to state 57

state 39

    (16) declaracion_instr -> LET ID IGUAL expresion . PUNTOCOMA
    (22) expresion -> expresion . MAS expresion
    (23) expresion -> expresion . MENOS expresion
    (24) expresion -> expresion . POR expresion
    (25) expresion -> expresion . DIVIDIDO expresion
    (26) expresion -> expresion . MAYOR expresion
    (27) expresion -> expresion . MENORQUE expresion
    (28) expresion -> expresion . IGUALQUE expresion
    (29) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       shift and go to state 58
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENORQUE        shift and go to state 47
    IGUALQUE        shift and go to state 48
    DIFERENTE       shift and go to state 49


state 40

    (35) expresion -> ID PUNTO . ID

    ID              shift and go to state 59


state 41

    (17) asignacion_instr -> ID IGUAL expresion PUNTOCOMA .

    CONSOLE         reduce using rule 17 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    LET             reduce using rule 17 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    ID              reduce using rule 17 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    IF              reduce using rule 17 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    FUNCTION        reduce using rule 17 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    INTERFACE       reduce using rule 17 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    $end            reduce using rule 17 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)
    LLAVDER         reduce using rule 17 (asignacion_instr -> ID IGUAL expresion PUNTOCOMA .)


state 42

    (22) expresion -> expresion MAS . expresion
    (22) expresion -> . expresion MAS expresion
    (23) expresion -> . expresion MENOS expresion
    (24) expresion -> . expresion POR expresion
    (25) expresion -> . expresion DIVIDIDO expresion
    (26) expresion -> . expresion MAYOR expresion
    (27) expresion -> . expresion MENORQUE expresion
    (28) expresion -> . expresion IGUALQUE expresion
    (29) expresion -> . expresion DIFERENTE expresion
    (30) expresion -> . MENOS expresion
    (31) expresion -> . PARIZQ expresion PARDER
    (32) expresion -> . ENTERO
    (33) expresion -> . CADENA
    (34) expresion -> . ID
    (35) expresion -> . ID PUNTO ID

    MENOS           shift and go to state 30
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 32
    CADENA          shift and go to state 33
    ID              shift and go to state 28

    expresion                      shift and go to state 60

state 43

    (23) expresion -> expresion MENOS . expresion
    (22) expresion -> . expresion MAS expresion
    (23) expresion -> . expresion MENOS expresion
    (24) expresion -> . expresion POR expresion
    (25) expresion -> . expresion DIVIDIDO expresion
    (26) expresion -> . expresion MAYOR expresion
    (27) expresion -> . expresion MENORQUE expresion
    (28) expresion -> . expresion IGUALQUE expresion
    (29) expresion -> . expresion DIFERENTE expresion
    (30) expresion -> . MENOS expresion
    (31) expresion -> . PARIZQ expresion PARDER
    (32) expresion -> . ENTERO
    (33) expresion -> . CADENA
    (34) expresion -> . ID
    (35) expresion -> . ID PUNTO ID

    MENOS           shift and go to state 30
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 32
    CADENA          shift and go to state 33
    ID              shift and go to state 28

    expresion                      shift and go to state 61

state 44

    (24) expresion -> expresion POR . expresion
    (22) expresion -> . expresion MAS expresion
    (23) expresion -> . expresion MENOS expresion
    (24) expresion -> . expresion POR expresion
    (25) expresion -> . expresion DIVIDIDO expresion
    (26) expresion -> . expresion MAYOR expresion
    (27) expresion -> . expresion MENORQUE expresion
    (28) expresion -> . expresion IGUALQUE expresion
    (29) expresion -> . expresion DIFERENTE expresion
    (30) expresion -> . MENOS expresion
    (31) expresion -> . PARIZQ expresion PARDER
    (32) expresion -> . ENTERO
    (33) expresion -> . CADENA
    (34) expresion -> . ID
    (35) expresion -> . ID PUNTO ID

    MENOS           shift and go to state 30
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 32
    CADENA          shift and go to state 33
    ID              shift and go to state 28

    expresion                      shift and go to state 62

state 45

    (25) expresion -> expresion DIVIDIDO . expresion
    (22) expresion -> . expresion MAS expresion
    (23) expresion -> . expresion MENOS expresion
    (24) expresion -> . expresion POR expresion
    (25) expresion -> . expresion DIVIDIDO expresion
    (26) expresion -> . expresion MAYOR expresion
    (27) expresion -> . expresion MENORQUE expresion
    (28) expresion -> . expresion IGUALQUE expresion
    (29) expresion -> . expresion DIFERENTE expresion
    (30) expresion -> . MENOS expresion
    (31) expresion -> . PARIZQ expresion PARDER
    (32) expresion -> . ENTERO
    (33) expresion -> . CADENA
    (34) expresion -> . ID
    (35) expresion -> . ID PUNTO ID

    MENOS           shift and go to state 30
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 32
    CADENA          shift and go to state 33
    ID              shift and go to state 28

    expresion                      shift and go to state 63

state 46

    (26) expresion -> expresion MAYOR . expresion
    (22) expresion -> . expresion MAS expresion
    (23) expresion -> . expresion MENOS expresion
    (24) expresion -> . expresion POR expresion
    (25) expresion -> . expresion DIVIDIDO expresion
    (26) expresion -> . expresion MAYOR expresion
    (27) expresion -> . expresion MENORQUE expresion
    (28) expresion -> . expresion IGUALQUE expresion
    (29) expresion -> . expresion DIFERENTE expresion
    (30) expresion -> . MENOS expresion
    (31) expresion -> . PARIZQ expresion PARDER
    (32) expresion -> . ENTERO
    (33) expresion -> . CADENA
    (34) expresion -> . ID
    (35) expresion -> . ID PUNTO ID

    MENOS           shift and go to state 30
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 32
    CADENA          shift and go to state 33
    ID              shift and go to state 28

    expresion                      shift and go to state 64

state 47

    (27) expresion -> expresion MENORQUE . expresion
    (22) expresion -> . expresion MAS expresion
    (23) expresion -> . expresion MENOS expresion
    (24) expresion -> . expresion POR expresion
    (25) expresion -> . expresion DIVIDIDO expresion
    (26) expresion -> . expresion MAYOR expresion
    (27) expresion -> . expresion MENORQUE expresion
    (28) expresion -> . expresion IGUALQUE expresion
    (29) expresion -> . expresion DIFERENTE expresion
    (30) expresion -> . MENOS expresion
    (31) expresion -> . PARIZQ expresion PARDER
    (32) expresion -> . ENTERO
    (33) expresion -> . CADENA
    (34) expresion -> . ID
    (35) expresion -> . ID PUNTO ID

    MENOS           shift and go to state 30
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 32
    CADENA          shift and go to state 33
    ID              shift and go to state 28

    expresion                      shift and go to state 65

state 48

    (28) expresion -> expresion IGUALQUE . expresion
    (22) expresion -> . expresion MAS expresion
    (23) expresion -> . expresion MENOS expresion
    (24) expresion -> . expresion POR expresion
    (25) expresion -> . expresion DIVIDIDO expresion
    (26) expresion -> . expresion MAYOR expresion
    (27) expresion -> . expresion MENORQUE expresion
    (28) expresion -> . expresion IGUALQUE expresion
    (29) expresion -> . expresion DIFERENTE expresion
    (30) expresion -> . MENOS expresion
    (31) expresion -> . PARIZQ expresion PARDER
    (32) expresion -> . ENTERO
    (33) expresion -> . CADENA
    (34) expresion -> . ID
    (35) expresion -> . ID PUNTO ID

    MENOS           shift and go to state 30
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 32
    CADENA          shift and go to state 33
    ID              shift and go to state 28

    expresion                      shift and go to state 66

state 49

    (29) expresion -> expresion DIFERENTE . expresion
    (22) expresion -> . expresion MAS expresion
    (23) expresion -> . expresion MENOS expresion
    (24) expresion -> . expresion POR expresion
    (25) expresion -> . expresion DIVIDIDO expresion
    (26) expresion -> . expresion MAYOR expresion
    (27) expresion -> . expresion MENORQUE expresion
    (28) expresion -> . expresion IGUALQUE expresion
    (29) expresion -> . expresion DIFERENTE expresion
    (30) expresion -> . MENOS expresion
    (31) expresion -> . PARIZQ expresion PARDER
    (32) expresion -> . ENTERO
    (33) expresion -> . CADENA
    (34) expresion -> . ID
    (35) expresion -> . ID PUNTO ID

    MENOS           shift and go to state 30
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 32
    CADENA          shift and go to state 33
    ID              shift and go to state 28

    expresion                      shift and go to state 67

state 50

    (30) expresion -> MENOS expresion .
    (22) expresion -> expresion . MAS expresion
    (23) expresion -> expresion . MENOS expresion
    (24) expresion -> expresion . POR expresion
    (25) expresion -> expresion . DIVIDIDO expresion
    (26) expresion -> expresion . MAYOR expresion
    (27) expresion -> expresion . MENORQUE expresion
    (28) expresion -> expresion . IGUALQUE expresion
    (29) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       reduce using rule 30 (expresion -> MENOS expresion .)
    MAS             reduce using rule 30 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 30 (expresion -> MENOS expresion .)
    POR             reduce using rule 30 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 30 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 30 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 30 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 30 (expresion -> MENOS expresion .)
    DIFERENTE       reduce using rule 30 (expresion -> MENOS expresion .)
    COMA            reduce using rule 30 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 30 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! POR             [ shift and go to state 44 ]
  ! DIVIDIDO        [ shift and go to state 45 ]
  ! MAYOR           [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]
  ! IGUALQUE        [ shift and go to state 48 ]
  ! DIFERENTE       [ shift and go to state 49 ]


state 51

    (31) expresion -> PARIZQ expresion . PARDER
    (22) expresion -> expresion . MAS expresion
    (23) expresion -> expresion . MENOS expresion
    (24) expresion -> expresion . POR expresion
    (25) expresion -> expresion . DIVIDIDO expresion
    (26) expresion -> expresion . MAYOR expresion
    (27) expresion -> expresion . MENORQUE expresion
    (28) expresion -> expresion . IGUALQUE expresion
    (29) expresion -> expresion . DIFERENTE expresion

    PARDER          shift and go to state 68
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENORQUE        shift and go to state 47
    IGUALQUE        shift and go to state 48
    DIFERENTE       shift and go to state 49


state 52

    (20) call_funcion_instr -> ID PARIZQ expresion COMA . expresion PARDER PUNTOCOMA
    (22) expresion -> . expresion MAS expresion
    (23) expresion -> . expresion MENOS expresion
    (24) expresion -> . expresion POR expresion
    (25) expresion -> . expresion DIVIDIDO expresion
    (26) expresion -> . expresion MAYOR expresion
    (27) expresion -> . expresion MENORQUE expresion
    (28) expresion -> . expresion IGUALQUE expresion
    (29) expresion -> . expresion DIFERENTE expresion
    (30) expresion -> . MENOS expresion
    (31) expresion -> . PARIZQ expresion PARDER
    (32) expresion -> . ENTERO
    (33) expresion -> . CADENA
    (34) expresion -> . ID
    (35) expresion -> . ID PUNTO ID

    MENOS           shift and go to state 30
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 32
    CADENA          shift and go to state 33
    ID              shift and go to state 28

    expresion                      shift and go to state 69

state 53

    (18) if_instr -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (21) if_else_instr -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    LLAVIZQ         shift and go to state 70


state 54

    (19) funcion_instr -> FUNCTION ID PARIZQ ID . COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    COMA            shift and go to state 71


state 55

    (14) interface_params -> ID . DOSPUNTOS expresion

    DOSPUNTOS       shift and go to state 72


state 56

    (12) interface_instr -> INTERFACE ID LLAVIZQ interface_params . PUNTOCOMA LLAVDER
    (13) interface_params -> interface_params . PUNTOCOMA ID DOSPUNTOS expresion

    PUNTOCOMA       shift and go to state 73


state 57

    (15) imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion . PARDER PUNTOCOMA
    (22) expresion -> expresion . MAS expresion
    (23) expresion -> expresion . MENOS expresion
    (24) expresion -> expresion . POR expresion
    (25) expresion -> expresion . DIVIDIDO expresion
    (26) expresion -> expresion . MAYOR expresion
    (27) expresion -> expresion . MENORQUE expresion
    (28) expresion -> expresion . IGUALQUE expresion
    (29) expresion -> expresion . DIFERENTE expresion

    PARDER          shift and go to state 74
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENORQUE        shift and go to state 47
    IGUALQUE        shift and go to state 48
    DIFERENTE       shift and go to state 49


state 58

    (16) declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .

    CONSOLE         reduce using rule 16 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    LET             reduce using rule 16 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    ID              reduce using rule 16 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    IF              reduce using rule 16 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    FUNCTION        reduce using rule 16 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    INTERFACE       reduce using rule 16 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    $end            reduce using rule 16 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)
    LLAVDER         reduce using rule 16 (declaracion_instr -> LET ID IGUAL expresion PUNTOCOMA .)


state 59

    (35) expresion -> ID PUNTO ID .

    PUNTOCOMA       reduce using rule 35 (expresion -> ID PUNTO ID .)
    MAS             reduce using rule 35 (expresion -> ID PUNTO ID .)
    MENOS           reduce using rule 35 (expresion -> ID PUNTO ID .)
    POR             reduce using rule 35 (expresion -> ID PUNTO ID .)
    DIVIDIDO        reduce using rule 35 (expresion -> ID PUNTO ID .)
    MAYOR           reduce using rule 35 (expresion -> ID PUNTO ID .)
    MENORQUE        reduce using rule 35 (expresion -> ID PUNTO ID .)
    IGUALQUE        reduce using rule 35 (expresion -> ID PUNTO ID .)
    DIFERENTE       reduce using rule 35 (expresion -> ID PUNTO ID .)
    COMA            reduce using rule 35 (expresion -> ID PUNTO ID .)
    PARDER          reduce using rule 35 (expresion -> ID PUNTO ID .)


state 60

    (22) expresion -> expresion MAS expresion .
    (22) expresion -> expresion . MAS expresion
    (23) expresion -> expresion . MENOS expresion
    (24) expresion -> expresion . POR expresion
    (25) expresion -> expresion . DIVIDIDO expresion
    (26) expresion -> expresion . MAYOR expresion
    (27) expresion -> expresion . MENORQUE expresion
    (28) expresion -> expresion . IGUALQUE expresion
    (29) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       reduce using rule 22 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 22 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 22 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 22 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 22 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 22 (expresion -> expresion MAS expresion .)
    DIFERENTE       reduce using rule 22 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 22 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 22 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45

  ! POR             [ reduce using rule 22 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 22 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! MAYOR           [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]
  ! IGUALQUE        [ shift and go to state 48 ]
  ! DIFERENTE       [ shift and go to state 49 ]


state 61

    (23) expresion -> expresion MENOS expresion .
    (22) expresion -> expresion . MAS expresion
    (23) expresion -> expresion . MENOS expresion
    (24) expresion -> expresion . POR expresion
    (25) expresion -> expresion . DIVIDIDO expresion
    (26) expresion -> expresion . MAYOR expresion
    (27) expresion -> expresion . MENORQUE expresion
    (28) expresion -> expresion . IGUALQUE expresion
    (29) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       reduce using rule 23 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 23 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 23 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 23 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 23 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 23 (expresion -> expresion MENOS expresion .)
    DIFERENTE       reduce using rule 23 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 23 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 23 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45

  ! POR             [ reduce using rule 23 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 23 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! MAYOR           [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]
  ! IGUALQUE        [ shift and go to state 48 ]
  ! DIFERENTE       [ shift and go to state 49 ]


state 62

    (24) expresion -> expresion POR expresion .
    (22) expresion -> expresion . MAS expresion
    (23) expresion -> expresion . MENOS expresion
    (24) expresion -> expresion . POR expresion
    (25) expresion -> expresion . DIVIDIDO expresion
    (26) expresion -> expresion . MAYOR expresion
    (27) expresion -> expresion . MENORQUE expresion
    (28) expresion -> expresion . IGUALQUE expresion
    (29) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       reduce using rule 24 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 24 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 24 (expresion -> expresion POR expresion .)
    POR             reduce using rule 24 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 24 (expresion -> expresion POR expresion .)
    MAYOR           reduce using rule 24 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 24 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 24 (expresion -> expresion POR expresion .)
    DIFERENTE       reduce using rule 24 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 24 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 24 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! POR             [ shift and go to state 44 ]
  ! DIVIDIDO        [ shift and go to state 45 ]
  ! MAYOR           [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]
  ! IGUALQUE        [ shift and go to state 48 ]
  ! DIFERENTE       [ shift and go to state 49 ]


state 63

    (25) expresion -> expresion DIVIDIDO expresion .
    (22) expresion -> expresion . MAS expresion
    (23) expresion -> expresion . MENOS expresion
    (24) expresion -> expresion . POR expresion
    (25) expresion -> expresion . DIVIDIDO expresion
    (26) expresion -> expresion . MAYOR expresion
    (27) expresion -> expresion . MENORQUE expresion
    (28) expresion -> expresion . IGUALQUE expresion
    (29) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       reduce using rule 25 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 25 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 25 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 25 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 25 (expresion -> expresion DIVIDIDO expresion .)
    MAYOR           reduce using rule 25 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 25 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 25 (expresion -> expresion DIVIDIDO expresion .)
    DIFERENTE       reduce using rule 25 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 25 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 25 (expresion -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 42 ]
  ! MENOS           [ shift and go to state 43 ]
  ! POR             [ shift and go to state 44 ]
  ! DIVIDIDO        [ shift and go to state 45 ]
  ! MAYOR           [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]
  ! IGUALQUE        [ shift and go to state 48 ]
  ! DIFERENTE       [ shift and go to state 49 ]


state 64

    (26) expresion -> expresion MAYOR expresion .
    (22) expresion -> expresion . MAS expresion
    (23) expresion -> expresion . MENOS expresion
    (24) expresion -> expresion . POR expresion
    (25) expresion -> expresion . DIVIDIDO expresion
    (26) expresion -> expresion . MAYOR expresion
    (27) expresion -> expresion . MENORQUE expresion
    (28) expresion -> expresion . IGUALQUE expresion
    (29) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       reduce using rule 26 (expresion -> expresion MAYOR expresion .)
    MAYOR           reduce using rule 26 (expresion -> expresion MAYOR expresion .)
    MENORQUE        reduce using rule 26 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 26 (expresion -> expresion MAYOR expresion .)
    PARDER          reduce using rule 26 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    IGUALQUE        shift and go to state 48
    DIFERENTE       shift and go to state 49

  ! MAS             [ reduce using rule 26 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 26 (expresion -> expresion MAYOR expresion .) ]
  ! POR             [ reduce using rule 26 (expresion -> expresion MAYOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 26 (expresion -> expresion MAYOR expresion .) ]
  ! IGUALQUE        [ reduce using rule 26 (expresion -> expresion MAYOR expresion .) ]
  ! DIFERENTE       [ reduce using rule 26 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]


state 65

    (27) expresion -> expresion MENORQUE expresion .
    (22) expresion -> expresion . MAS expresion
    (23) expresion -> expresion . MENOS expresion
    (24) expresion -> expresion . POR expresion
    (25) expresion -> expresion . DIVIDIDO expresion
    (26) expresion -> expresion . MAYOR expresion
    (27) expresion -> expresion . MENORQUE expresion
    (28) expresion -> expresion . IGUALQUE expresion
    (29) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       reduce using rule 27 (expresion -> expresion MENORQUE expresion .)
    MAYOR           reduce using rule 27 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 27 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 27 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 27 (expresion -> expresion MENORQUE expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    IGUALQUE        shift and go to state 48
    DIFERENTE       shift and go to state 49

  ! MAS             [ reduce using rule 27 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 27 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 27 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 27 (expresion -> expresion MENORQUE expresion .) ]
  ! IGUALQUE        [ reduce using rule 27 (expresion -> expresion MENORQUE expresion .) ]
  ! DIFERENTE       [ reduce using rule 27 (expresion -> expresion MENORQUE expresion .) ]
  ! MAYOR           [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]


state 66

    (28) expresion -> expresion IGUALQUE expresion .
    (22) expresion -> expresion . MAS expresion
    (23) expresion -> expresion . MENOS expresion
    (24) expresion -> expresion . POR expresion
    (25) expresion -> expresion . DIVIDIDO expresion
    (26) expresion -> expresion . MAYOR expresion
    (27) expresion -> expresion . MENORQUE expresion
    (28) expresion -> expresion . IGUALQUE expresion
    (29) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       reduce using rule 28 (expresion -> expresion IGUALQUE expresion .)
    MAYOR           reduce using rule 28 (expresion -> expresion IGUALQUE expresion .)
    MENORQUE        reduce using rule 28 (expresion -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 28 (expresion -> expresion IGUALQUE expresion .)
    DIFERENTE       reduce using rule 28 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 28 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 28 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45

  ! MAS             [ reduce using rule 28 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 28 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 28 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 28 (expresion -> expresion IGUALQUE expresion .) ]
  ! MAYOR           [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]
  ! IGUALQUE        [ shift and go to state 48 ]
  ! DIFERENTE       [ shift and go to state 49 ]


state 67

    (29) expresion -> expresion DIFERENTE expresion .
    (22) expresion -> expresion . MAS expresion
    (23) expresion -> expresion . MENOS expresion
    (24) expresion -> expresion . POR expresion
    (25) expresion -> expresion . DIVIDIDO expresion
    (26) expresion -> expresion . MAYOR expresion
    (27) expresion -> expresion . MENORQUE expresion
    (28) expresion -> expresion . IGUALQUE expresion
    (29) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       reduce using rule 29 (expresion -> expresion DIFERENTE expresion .)
    MAYOR           reduce using rule 29 (expresion -> expresion DIFERENTE expresion .)
    MENORQUE        reduce using rule 29 (expresion -> expresion DIFERENTE expresion .)
    IGUALQUE        reduce using rule 29 (expresion -> expresion DIFERENTE expresion .)
    DIFERENTE       reduce using rule 29 (expresion -> expresion DIFERENTE expresion .)
    COMA            reduce using rule 29 (expresion -> expresion DIFERENTE expresion .)
    PARDER          reduce using rule 29 (expresion -> expresion DIFERENTE expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45

  ! MAS             [ reduce using rule 29 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENOS           [ reduce using rule 29 (expresion -> expresion DIFERENTE expresion .) ]
  ! POR             [ reduce using rule 29 (expresion -> expresion DIFERENTE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 29 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYOR           [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]
  ! IGUALQUE        [ shift and go to state 48 ]
  ! DIFERENTE       [ shift and go to state 49 ]


state 68

    (31) expresion -> PARIZQ expresion PARDER .

    PUNTOCOMA       reduce using rule 31 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 31 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 31 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 31 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 31 (expresion -> PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 31 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 31 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 31 (expresion -> PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 31 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 31 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 31 (expresion -> PARIZQ expresion PARDER .)


state 69

    (20) call_funcion_instr -> ID PARIZQ expresion COMA expresion . PARDER PUNTOCOMA
    (22) expresion -> expresion . MAS expresion
    (23) expresion -> expresion . MENOS expresion
    (24) expresion -> expresion . POR expresion
    (25) expresion -> expresion . DIVIDIDO expresion
    (26) expresion -> expresion . MAYOR expresion
    (27) expresion -> expresion . MENORQUE expresion
    (28) expresion -> expresion . IGUALQUE expresion
    (29) expresion -> expresion . DIFERENTE expresion

    PARDER          shift and go to state 75
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENORQUE        shift and go to state 47
    IGUALQUE        shift and go to state 48
    DIFERENTE       shift and go to state 49


state 70

    (18) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER PUNTOCOMA
    (21) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) instruccion -> . interface_instr
    (15) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (16) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (17) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (18) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (21) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (19) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (20) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA
    (12) interface_instr -> . INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER

    CONSOLE         shift and go to state 12
    LET             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    FUNCTION        shift and go to state 16
    INTERFACE       shift and go to state 17

    instrucciones                  shift and go to state 76
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10
    interface_instr                shift and go to state 11

state 71

    (19) funcion_instr -> FUNCTION ID PARIZQ ID COMA . ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    ID              shift and go to state 77


state 72

    (14) interface_params -> ID DOSPUNTOS . expresion
    (22) expresion -> . expresion MAS expresion
    (23) expresion -> . expresion MENOS expresion
    (24) expresion -> . expresion POR expresion
    (25) expresion -> . expresion DIVIDIDO expresion
    (26) expresion -> . expresion MAYOR expresion
    (27) expresion -> . expresion MENORQUE expresion
    (28) expresion -> . expresion IGUALQUE expresion
    (29) expresion -> . expresion DIFERENTE expresion
    (30) expresion -> . MENOS expresion
    (31) expresion -> . PARIZQ expresion PARDER
    (32) expresion -> . ENTERO
    (33) expresion -> . CADENA
    (34) expresion -> . ID
    (35) expresion -> . ID PUNTO ID

    MENOS           shift and go to state 30
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 32
    CADENA          shift and go to state 33
    ID              shift and go to state 28

    expresion                      shift and go to state 78

state 73

    (12) interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA . LLAVDER
    (13) interface_params -> interface_params PUNTOCOMA . ID DOSPUNTOS expresion

    LLAVDER         shift and go to state 80
    ID              shift and go to state 79


state 74

    (15) imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 81


state 75

    (20) call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 82


state 76

    (18) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER PUNTOCOMA
    (21) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) instruccion -> . interface_instr
    (15) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (16) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (17) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (18) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (21) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (19) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (20) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA
    (12) interface_instr -> . INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER

    LLAVDER         shift and go to state 83
    CONSOLE         shift and go to state 12
    LET             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    FUNCTION        shift and go to state 16
    INTERFACE       shift and go to state 17

    instruccion                    shift and go to state 18
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10
    interface_instr                shift and go to state 11

state 77

    (19) funcion_instr -> FUNCTION ID PARIZQ ID COMA ID . PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    PARDER          shift and go to state 84


state 78

    (14) interface_params -> ID DOSPUNTOS expresion .
    (22) expresion -> expresion . MAS expresion
    (23) expresion -> expresion . MENOS expresion
    (24) expresion -> expresion . POR expresion
    (25) expresion -> expresion . DIVIDIDO expresion
    (26) expresion -> expresion . MAYOR expresion
    (27) expresion -> expresion . MENORQUE expresion
    (28) expresion -> expresion . IGUALQUE expresion
    (29) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       reduce using rule 14 (interface_params -> ID DOSPUNTOS expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENORQUE        shift and go to state 47
    IGUALQUE        shift and go to state 48
    DIFERENTE       shift and go to state 49


state 79

    (13) interface_params -> interface_params PUNTOCOMA ID . DOSPUNTOS expresion

    DOSPUNTOS       shift and go to state 85


state 80

    (12) interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER .

    CONSOLE         reduce using rule 12 (interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER .)
    LET             reduce using rule 12 (interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER .)
    ID              reduce using rule 12 (interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER .)
    IF              reduce using rule 12 (interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER .)
    FUNCTION        reduce using rule 12 (interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER .)
    INTERFACE       reduce using rule 12 (interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER .)
    $end            reduce using rule 12 (interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER .)
    LLAVDER         reduce using rule 12 (interface_instr -> INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER .)


state 81

    (15) imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .

    CONSOLE         reduce using rule 15 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    LET             reduce using rule 15 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    ID              reduce using rule 15 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    IF              reduce using rule 15 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    FUNCTION        reduce using rule 15 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    INTERFACE       reduce using rule 15 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    $end            reduce using rule 15 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)
    LLAVDER         reduce using rule 15 (imprimir_instr -> CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA .)


state 82

    (20) call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .

    CONSOLE         reduce using rule 20 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    LET             reduce using rule 20 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    ID              reduce using rule 20 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    IF              reduce using rule 20 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    FUNCTION        reduce using rule 20 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    INTERFACE       reduce using rule 20 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    $end            reduce using rule 20 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)
    LLAVDER         reduce using rule 20 (call_funcion_instr -> ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA .)


state 83

    (18) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . PUNTOCOMA
    (21) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    PUNTOCOMA       shift and go to state 86
    ELSE            shift and go to state 87


state 84

    (19) funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER . LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    LLAVIZQ         shift and go to state 88


state 85

    (13) interface_params -> interface_params PUNTOCOMA ID DOSPUNTOS . expresion
    (22) expresion -> . expresion MAS expresion
    (23) expresion -> . expresion MENOS expresion
    (24) expresion -> . expresion POR expresion
    (25) expresion -> . expresion DIVIDIDO expresion
    (26) expresion -> . expresion MAYOR expresion
    (27) expresion -> . expresion MENORQUE expresion
    (28) expresion -> . expresion IGUALQUE expresion
    (29) expresion -> . expresion DIFERENTE expresion
    (30) expresion -> . MENOS expresion
    (31) expresion -> . PARIZQ expresion PARDER
    (32) expresion -> . ENTERO
    (33) expresion -> . CADENA
    (34) expresion -> . ID
    (35) expresion -> . ID PUNTO ID

    MENOS           shift and go to state 30
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 32
    CADENA          shift and go to state 33
    ID              shift and go to state 28

    expresion                      shift and go to state 89

state 86

    (18) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .

    CONSOLE         reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    LET             reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    ID              reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    IF              reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    FUNCTION        reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    INTERFACE       reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    $end            reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    LLAVDER         reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)


state 87

    (21) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE . LLAVIZQ instrucciones LLAVDER PUNTOCOMA

    LLAVIZQ         shift and go to state 90


state 88

    (19) funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ . instrucciones LLAVDER PUNTOCOMA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) instruccion -> . interface_instr
    (15) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (16) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (17) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (18) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (21) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (19) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (20) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA
    (12) interface_instr -> . INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER

    CONSOLE         shift and go to state 12
    LET             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    FUNCTION        shift and go to state 16
    INTERFACE       shift and go to state 17

    instrucciones                  shift and go to state 91
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10
    interface_instr                shift and go to state 11

state 89

    (13) interface_params -> interface_params PUNTOCOMA ID DOSPUNTOS expresion .
    (22) expresion -> expresion . MAS expresion
    (23) expresion -> expresion . MENOS expresion
    (24) expresion -> expresion . POR expresion
    (25) expresion -> expresion . DIVIDIDO expresion
    (26) expresion -> expresion . MAYOR expresion
    (27) expresion -> expresion . MENORQUE expresion
    (28) expresion -> expresion . IGUALQUE expresion
    (29) expresion -> expresion . DIFERENTE expresion

    PUNTOCOMA       reduce using rule 13 (interface_params -> interface_params PUNTOCOMA ID DOSPUNTOS expresion .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    POR             shift and go to state 44
    DIVIDIDO        shift and go to state 45
    MAYOR           shift and go to state 46
    MENORQUE        shift and go to state 47
    IGUALQUE        shift and go to state 48
    DIFERENTE       shift and go to state 49


state 90

    (21) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ . instrucciones LLAVDER PUNTOCOMA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) instruccion -> . interface_instr
    (15) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (16) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (17) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (18) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (21) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (19) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (20) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA
    (12) interface_instr -> . INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER

    CONSOLE         shift and go to state 12
    LET             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    FUNCTION        shift and go to state 16
    INTERFACE       shift and go to state 17

    instrucciones                  shift and go to state 92
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10
    interface_instr                shift and go to state 11

state 91

    (19) funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones . LLAVDER PUNTOCOMA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) instruccion -> . interface_instr
    (15) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (16) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (17) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (18) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (21) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (19) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (20) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA
    (12) interface_instr -> . INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER

    LLAVDER         shift and go to state 93
    CONSOLE         shift and go to state 12
    LET             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    FUNCTION        shift and go to state 16
    INTERFACE       shift and go to state 17

    instruccion                    shift and go to state 18
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10
    interface_instr                shift and go to state 11

state 92

    (21) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones . LLAVDER PUNTOCOMA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . if_instr
    (8) instruccion -> . if_else_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . call_funcion_instr
    (11) instruccion -> . interface_instr
    (15) imprimir_instr -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER PUNTOCOMA
    (16) declaracion_instr -> . LET ID IGUAL expresion PUNTOCOMA
    (17) asignacion_instr -> . ID IGUAL expresion PUNTOCOMA
    (18) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (21) if_else_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (19) funcion_instr -> . FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA
    (20) call_funcion_instr -> . ID PARIZQ expresion COMA expresion PARDER PUNTOCOMA
    (12) interface_instr -> . INTERFACE ID LLAVIZQ interface_params PUNTOCOMA LLAVDER

    LLAVDER         shift and go to state 94
    CONSOLE         shift and go to state 12
    LET             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    FUNCTION        shift and go to state 16
    INTERFACE       shift and go to state 17

    instruccion                    shift and go to state 18
    imprimir_instr                 shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    if_instr                       shift and go to state 7
    if_else_instr                  shift and go to state 8
    funcion_instr                  shift and go to state 9
    call_funcion_instr             shift and go to state 10
    interface_instr                shift and go to state 11

state 93

    (19) funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 95


state 94

    (21) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 96


state 95

    (19) funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .

    CONSOLE         reduce using rule 19 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    LET             reduce using rule 19 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    ID              reduce using rule 19 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    IF              reduce using rule 19 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    FUNCTION        reduce using rule 19 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    INTERFACE       reduce using rule 19 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    $end            reduce using rule 19 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    LLAVDER         reduce using rule 19 (funcion_instr -> FUNCTION ID PARIZQ ID COMA ID PARDER LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)


state 96

    (21) if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .

    CONSOLE         reduce using rule 21 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    LET             reduce using rule 21 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    ID              reduce using rule 21 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    IF              reduce using rule 21 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    FUNCTION        reduce using rule 21 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    INTERFACE       reduce using rule 21 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    $end            reduce using rule 21 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)
    LLAVDER         reduce using rule 21 (if_else_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER PUNTOCOMA .)

